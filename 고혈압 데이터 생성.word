◉테이블 명세

T120		:진단 테이블
Jk		:자격 테이블
GJ		:검진 테이블
GJ_UNIF	:데이터 일원화된 검진 테이블

T120_I109			:T120중에 MAIN_SICK이 (I109*)인 환자 레코드
T120_SUB_I109		:T120중에 SUB_SICK이 (I109*)인 레코드
T120_NOT_I109_SUB_I109	:T120중에 MAIN_SICK이 (I109*), SUB_SICK이 (I109*)이 없는 환자 레코드

T120_I109_JK			:T120_I109 환자들의 자격정보 테이블

T120_I109_YEAR			:T120_I109 환자들의 최초 진단 해로 구성된 테이블
T120_NOT_I109_SUB_I109_YEAR	:T120_NOT_I109_SUB_I109 환자들의 최신 진단 해로 구성된 테이블
T120_NOT_I109_SUB_I109_YEAR_JK :T120_NOT_I109_SUB_I109_YEAR 환자들의 자격정보 테이블

-실험군
EXP_DATA_2YEAR	:T120_I109_YEAR + JK + 2년전 검진 레코드
EXP_DATA_4YEAR	:T120_I109_YEAR + JK + 2,4년전 검진 레코드
EXP_DATA_6YEAR	:T120_I109_YEAR + JK + 2,4,6년전검진 레코드

-대조군1
CTR_DATA_1_1YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1년전 검진 레코드
CTR_DATA_1_2YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1~2년전 검진 레코드
CTR_DATA_1_3YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1~3년전 검진 레코드
CTR_DATA_1_4YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1~4년전 검진 레코드
CTR_DATA_1_5YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1~5년전 검진 레코드
CTR_DATA_1_6YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 1~6년전 검진 레코드

-대조군2
CTR_DATA_2_2YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 2년전 검진 레코드
CTR_DATA_2_4YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 2,4년전 검진 레코드
CTR_DATA_2_6YEAR	:T120_NOT_E_1014_SUB_I109_YEAR_2013 + JK + 2,4,6년전 검진 레코드

 

◉샘플링
조건 by group mysql 그룹화 된 결과의 각 그룹에 대해 상위 n 개의 레코드 가져 오기
http://www.sqlines.com/mysql/how-to/get_top_n_each_group

SELECT *
FROM
(SELECT *,
    	@row_rank := IF(@current_row = YEAR(RECU_FR_DT), @row_rank + 1, 1) AS row_rank,
    	@current_row := YEAR(RECU_FR_DT)
FROM T120
ORDER BY YEAR(RECU_FR_DT)
)ranked
WHERE row_rank<10000
;
CREATE TABLE T120_AN10000 AS
(
SELECT *
FROM
(SELECT *,
    	@row_rank := IF(@current_row = YEAR(RECU_FR_DT), @row_rank + 1, 1) AS row_rank,
    	@current_row := YEAR(RECU_FR_DT)
FROM T120
ORDER BY YEAR(RECU_FR_DT)
)ranked
WHERE row_rank<10000
)

◉기타
(kill process)
You can do something like this to check if any mysql process is running or not:
ps aux | grep mysqld
ps aux | grep mysql
Then if it is running you can killall by using(depending on what all processes are running currently):
killall -9 mysql
killall -9 mysqld
killall -9 mysqld_safe

(show function list)   
show function status

(UPDATE SAFE MODE)
SET SQL_SAFE_UPDATES = 0;

(BUFFER SIZE MODIFY)
Error Code: 1206. The total number of locks exceeds the lock table size
SET GLOBAL innodb_buffer_pool_size=68719476736;
//64G
SELECT @@innodb_buffer_pool_size/1024/1024/1024; 
◉검진 테이블(GJ) 일원화
참고:검진기준 변동분류_01.xlsx

(2003~2008)범주형 데이터
(2009~2013)연속형 데이터
범주형->연속형 일원화 =>Data Dropout 발생.
연속형->범주형 일원화 사용=> (2009~2013)->(2003~2008)일원화

상중하 그룹핑

! GJ테이블 복사본(GJ_COPY) 미리 만들고 UPDATE하기

1.GJ_UNIF_1
HCHK_PMH_CD1,2,3->CONCATED->HCHK_APOP_PMH_YN...

CREATE TABLE GJ_UNIF_1 AS
(SELECT *,CONCAT_WS(',',HCHK_PMH_CD1,HCHK_PMH_CD2,HCHK_PMH_CD3) AS CONCATED
FROM GJ_COPY
)

//

HCHK_PMH_CD123 : 1,2,7 // 4,6 // 2,8,9 등등
HCHK_PMH_CD123에 1~9를 보고 0,1을리턴해주는 함수
IS_APOP
DELIMITER $$

CREATE FUNCTION IS_APOP(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%6%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END
IS_HDISE
DELIMITER $$

CREATE FUNCTION IS_HDISE(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%5%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END
IS_HPRTS
DELIMITER $$

CREATE FUNCTION IS_HPRTS(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%4%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END
IS_DIABML
DELIMITER $$

CREATE FUNCTION IS_DIABML(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%7%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END
IS_HPLPDM
Return 0;
IS_PHSS
DELIMITER $$

CREATE FUNCTION IS_PHSS(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%1%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END
IS_ETCDSE
DELIMITER $$

CREATE FUNCTION IS_ETCDSE(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input LIKE "%2%" OR
   	 input LIKE "%3%" OR
    	input LIKE "%8%" OR
    	input LIKE "%9%") THEN
    	RETURN 1;
	ELSE
    	RETURN 0;
    END IF;
END

//

UPDATE GJ_UNIF_1
SET
`HCHK_APOP_PMH_YN` = IS_APOP(CONCATED),
`HCHK_DIABML_PMH_YN` = IS_DIABML(CONCATED),
`HCHK_ETCDSE_PMH_YN` = IS_ETCDSE(CONCATED),
`HCHK_HDISE_PMH_YN` = IS_HDISE(CONCATED),
`HCHK_HPLPDM_PMH_YN` =0,
`HCHK_HPRTS_PMH_YN` = IS_HPRTS(CONCATED),
`HCHK_PHSS_PMH_YN` = IS_PHSS(CONCATED)
WHERE NOT CONCATED=",," AND HCHK_YEAR<=2008

//

IS_01
DELIMITER $$

CREATE FUNCTION IS_01(input text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input LIKE "1" THEN
   	 RETURN 1;
	ELSE
    	RETURN 0;
	END IF;
END

//

UPDATE GJ_UNIF_1
SET
`HCHK_APOP_PMH_YN` = IS_01(HCHK_APOP_PMH_YN),
`HCHK_DIABML_PMH_YN` = IS_01(HCHK_DIABML_PMH_YN),
`HCHK_ETCDSE_PMH_YN` = IS_01(HCHK_ETCDSE_PMH_YN),
`HCHK_HDISE_PMH_YN` = IS_01(HCHK_HDISE_PMH_YN),
`HCHK_HPLPDM_PMH_YN` = IS_01(HCHK_HPLPDM_PMH_YN),
`HCHK_HPRTS_PMH_YN` = IS_01(HCHK_HPRTS_PMH_YN),
`HCHK_PHSS_PMH_YN` = IS_01(HCHK_PHSS_PMH_YN)
WHERE HCHK_YEAR>2008 AND
	(`HCHK_APOP_PMH_YN`    	LIKE "1" OR
 	`HCHK_DIABML_PMH_YN` 	LIKE "1" OR
 	`HCHK_ETCDSE_PMH_YN` LIKE "1" OR
 	`HCHK_HDISE_PMH_YN` 	LIKE "1" OR
 	`HCHK_HPLPDM_PMH_YN`	LIKE "1" OR
 	`HCHK_HPRTS_PMH_YN` 	LIKE "1" OR
 	`HCHK_PHSS_PMH_YN`    	LIKE "1")
2.GJ_UNIF_2 (개인질병이력 SUM:SUM_PMH)
CREATE TABLE GJ_UNIF_2 AS
(
SELECT *,
    `HCHK_APOP_PMH_YN` + `HCHK_HDISE_PMH_YN` + `HCHK_HPRTS_PMH_YN` + `HCHK_DIABML_PMH_YN` + `HCHK_HPLPDM_PMH_YN` + `HCHK_PHSS_PMH_YN` + `HCHK_ETCDSE_PMH_YN` AS SUM_PMH
FROM GJ_UNIF_1
)
3.GJ_UNIF_3 (09~개인질병이력 3개이상인 사람 제외,SUM_PMH제외,HCHK_PMH_CD123제외)
2210067->1168274

//

CREATE TABLE GJ_UNIF_3 AS
(
SELECT `GJ_UNIF_2`.`HCHK_YEAR`,
	`GJ_UNIF_2`.`PERSON_ID`,
	`GJ_UNIF_2`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_2`.`HEIGHT`,
	`GJ_UNIF_2`.`WEIGHT`,
	`GJ_UNIF_2`.`WAIST`,
	`GJ_UNIF_2`.`BP_HIGH`,
	`GJ_UNIF_2`.`BP_LWST`,
	`GJ_UNIF_2`.`BLDS`,
	`GJ_UNIF_2`.`TOT_CHOLE`,
	`GJ_UNIF_2`.`TRIGLYCERIDE`,
	`GJ_UNIF_2`.`HDL_CHOLE`,
	`GJ_UNIF_2`.`LDL_CHOLE`,
	`GJ_UNIF_2`.`HMG`,
	`GJ_UNIF_2`.`GLY_CD`,
	`GJ_UNIF_2`.`OLIG_OCCU_CD`,
	`GJ_UNIF_2`.`OLIG_PH`,
	`GJ_UNIF_2`.`OLIG_PROTE_CD`,
	`GJ_UNIF_2`.`CREATININE`,
	`GJ_UNIF_2`.`SGOT_AST`,
	`GJ_UNIF_2`.`SGPT_ALT`,
	`GJ_UNIF_2`.`GAMMA_GTP`,
	`GJ_UNIF_2`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_2`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_2`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_2`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_2`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_2`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_2`.`FMLY_LIVER_DISE_PATIEN_YN`,
	`GJ_UNIF_2`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_2`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_2`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_2`.`PAST_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_2`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_2`.`CUR_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_2`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_2`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_2`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_2`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_2`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_2`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_2`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_2`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_2
WHERE SUM_PMH<=3
)
3.FMLY일원화
DELIMITER $$

CREATE FUNCTION CONV_FMLY(input1 text) RETURNS char
	DETERMINISTIC
BEGIN
    IF input1=1 THEN
   	 RETURN 0;
    ELSEIF input1=2 THEN
   	 RETURN 1;
    ELSE
   	 RETURN "";
    END IF;
END

//

UPDATE GJ_UNIF_3
SET
FMLY_APOP_PATIEN_YN=CONV_FMLY(FMLY_APOP_PATIEN_YN),
FMLY_HDISE_PATIEN_YN=CONV_FMLY(FMLY_HDISE_PATIEN_YN),
FMLY_HPRTS_PATIEN_YN=CONV_FMLY(FMLY_HPRTS_PATIEN_YN),
FMLY_DIABML_PATIEN_YN=CONV_FMLY(FMLY_DIABML_PATIEN_YN),
FMLY_LIVER_DISE_PATIEN_YN=CONV_FMLY(FMLY_LIVER_DISE_PATIEN_YN),
FMLY_CANCER_PATIEN_YN=CONV_FMLY(FMLY_CANCER_PATIEN_YN)
WHERE HCHK_YEAR<2009

//

SELECT
FMLY_APOP_PATIEN_YN,
FMLY_HDISE_PATIEN_YN,
FMLY_HPRTS_PATIEN_YN,
FMLY_DIABML_PATIEN_YN,
FMLY_LIVER_DISE_PATIEN_YN,
FMLY_CANCER_PATIEN_YN
FROM GJ_UNIF_3
WHERE HCHK_YEAR<2008



4.GJ_UNIF_4 (FMLY_LIVER_DISE_PATIEN_YN삭제)
SELECT `GJ_UNIF_3`.`HCHK_YEAR`,
	`GJ_UNIF_3`.`PERSON_ID`,
	`GJ_UNIF_3`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_3`.`HEIGHT`,
	`GJ_UNIF_3`.`WEIGHT`,
	`GJ_UNIF_3`.`WAIST`,
	`GJ_UNIF_3`.`BP_HIGH`,
	`GJ_UNIF_3`.`BP_LWST`,
	`GJ_UNIF_3`.`BLDS`,
	`GJ_UNIF_3`.`TOT_CHOLE`,
	`GJ_UNIF_3`.`TRIGLYCERIDE`,
	`GJ_UNIF_3`.`HDL_CHOLE`,
	`GJ_UNIF_3`.`LDL_CHOLE`,
	`GJ_UNIF_3`.`HMG`,
	`GJ_UNIF_3`.`GLY_CD`,
	`GJ_UNIF_3`.`OLIG_OCCU_CD`,
	`GJ_UNIF_3`.`OLIG_PH`,
	`GJ_UNIF_3`.`OLIG_PROTE_CD`,
	`GJ_UNIF_3`.`CREATININE`,
	`GJ_UNIF_3`.`SGOT_AST`,
	`GJ_UNIF_3`.`SGPT_ALT`,
	`GJ_UNIF_3`.`GAMMA_GTP`,
	`GJ_UNIF_3`.`HCHK_PMH_CD1`,
	`GJ_UNIF_3`.`HCHK_PMH_CD2`,
	`GJ_UNIF_3`.`HCHK_PMH_CD3`,
	`GJ_UNIF_3`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_3`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_3`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_3`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_3`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_3`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_3`.`FMLY_LIVER_DISE_PATIEN_YN`,
	`GJ_UNIF_3`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_3`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_3`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_3`.`PAST_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_3`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_3`.`CUR_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_3`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_3`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_3`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_3`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_3`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_3`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_3`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_3`.`WLK30_WEK_FREQ_ID`
FROM `namzle`.`GJ_UNIF_3`;



4.GJ_UNIF_5 (BMI 추가하기,HEIGHT,WEIGHT,WAIST 삭제)
WHTS인가 이거는 WAIST가 결측치 많으므로 쓰지않음
BMI 쓰기로 함

DELIMITER $$

CREATE FUNCTION BMI(height text,weight text) RETURNS double
	DETERMINISTIC
BEGIN
	RETURN weight/power(height/100,2);
END

//

CREATE TABLE GJ_UNIF_5 AS
(
SELECT
    `GJ_UNIF_4`.`HCHK_YEAR`,
	`GJ_UNIF_4`.`PERSON_ID`,
	`GJ_UNIF_4`.`YKIHO_GUBUN_CD`,
	BMI(`GJ_UNIF_4`.`HEIGHT`,`GJ_UNIF_4`.`WEIGHT`) AS BMI,
	`GJ_UNIF_4`.`BP_HIGH`,
	`GJ_UNIF_4`.`BP_LWST`,
	`GJ_UNIF_4`.`BLDS`,
	`GJ_UNIF_4`.`TOT_CHOLE`,
	`GJ_UNIF_4`.`TRIGLYCERIDE`,
	`GJ_UNIF_4`.`HDL_CHOLE`,
	`GJ_UNIF_4`.`LDL_CHOLE`,
	`GJ_UNIF_4`.`HMG`,
	`GJ_UNIF_4`.`GLY_CD`,
	`GJ_UNIF_4`.`OLIG_OCCU_CD`,
	`GJ_UNIF_4`.`OLIG_PH`,
	`GJ_UNIF_4`.`OLIG_PROTE_CD`,
	`GJ_UNIF_4`.`CREATININE`,
	`GJ_UNIF_4`.`SGOT_AST`,
	`GJ_UNIF_4`.`SGPT_ALT`,
	`GJ_UNIF_4`.`GAMMA_GTP`,
	`GJ_UNIF_4`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_4`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_4`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_4`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_4`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_4`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_4`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_4`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_4`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_4`.`PAST_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_4`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_4`.`CUR_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_4`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_4`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_4`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_4`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_4`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_4`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_4`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_4`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_4
WHERE
	(`GJ_UNIF_4`.`HEIGHT`                 	IS NOT NULL AND NOT `GJ_UNIF_4`.`HEIGHT` ="") AND
	(`GJ_UNIF_4`.`WEIGHT`                 	IS NOT NULL AND NOT `GJ_UNIF_4`.`WEIGHT` ="")
)

5.검진기관종별코드 (YKIHO) 구분화
참고:표본코호트 DB 사용자 매뉴얼.xlsx

DELIMITER $$

CREATE FUNCTION CLASS_YKIHO(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1=10 THEN
    	RETURN 1;
	ELSEIF (input1>=20 AND input1<=29) THEN
    	RETURN 2;
	ELSEIF (input1>=30 AND input1<=39) THEN
    	RETURN 3;
	ELSEIF (input1>=40 AND input1<=49) THEN
    	RETURN 4;
	ELSEIF (input1>=50 AND input1<=59) THEN
    	RETURN 5;
	ELSEIF (input1>=60 AND input1<=69) THEN
    	RETURN 6;
	ELSEIF (input1>=70 AND input1<=79) THEN
    	RETURN 7;
	ELSEIF (input1>=80 AND input1<=89) THEN
    	RETURN 8;
	ELSEIF (input1>=91 AND input1<=99) THEN
    	RETURN 9;
	END IF;
END

//

UPDATE GJ_UNIF_5
SET
YKIHO_GUBUN_CD=CLASS_YKIHO(YKIHO_GUBUN_CD)
WHERE YKIHO_GUBUN_CD IS NOT NULL AND NOT YKIHO_GUBUN_CD=""
6.BMI 구분화
DELIMITER $$

CREATE FUNCTION CLASS_BMI(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input1>=18.5 AND input1<25) THEN
    	RETURN 0;
	ELSEIF (input1>=25 AND input1<30) THEN
    	RETURN 1;
	ELSEIF (input1>=30) THEN
    	RETURN 2;
	ELSE
   	 RETURN 9;
	END IF;
END

//

UPDATE GJ_UNIF_5
SET
BMI=CLASS_BMI(BMI)
WHERE BMI IS NOT NULL AND NOT BMI=""

7.GJ_UNIF_6 (BP Column추가,혈압(BP_HIGH,BP_LWST)구분화, BP_HIGH,BP_LWST 삭제)
DELIMITER $$

CREATE FUNCTION CLASS_BP(input1 text, input2 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF (input1<100 AND input2<60)THEN
    	RETURN 9;
	ELSEIF (input1<120 AND input2<80)THEN
    	RETURN 0;
	ELSEIF (input1<140 AND input2<90) THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

CREATE TABLE GJ_UNIF_6 AS
(
SELECT `GJ_UNIF_5`.`HCHK_YEAR`,    
	`GJ_UNIF_5`.`PERSON_ID`,
	`GJ_UNIF_5`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_5`.`BMI`,
	CLASS_BP(BP_HIGH,BP_LWST) AS BP,
	`GJ_UNIF_5`.`BLDS`,
	`GJ_UNIF_5`.`TOT_CHOLE`,
	`GJ_UNIF_5`.`TRIGLYCERIDE`,
	`GJ_UNIF_5`.`HDL_CHOLE`,
	`GJ_UNIF_5`.`LDL_CHOLE`,
	`GJ_UNIF_5`.`HMG`,
	`GJ_UNIF_5`.`GLY_CD`,
	`GJ_UNIF_5`.`OLIG_OCCU_CD`,
	`GJ_UNIF_5`.`OLIG_PH`,
	`GJ_UNIF_5`.`OLIG_PROTE_CD`,
	`GJ_UNIF_5`.`CREATININE`,
	`GJ_UNIF_5`.`SGOT_AST`,
	`GJ_UNIF_5`.`SGPT_ALT`,
	`GJ_UNIF_5`.`GAMMA_GTP`,
	`GJ_UNIF_5`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_5`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_5`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_5`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_5`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_5`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_5`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_5`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_5`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_5`.`PAST_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_5`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_5`.`CUR_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_5`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_5`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_5`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_5`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_5`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_5`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_5`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_5`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_5
)
8.공복혈당 구분화
DELIMITER $$

CREATE FUNCTION CLASS_BLDS(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1<100 THEN
    	RETURN 0;
	ELSEIF input1<126 THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

UPDATE GJ_UNIF_6
SET
BLDS=CLASS_BLDS(BLDS)
WHERE BLDS IS NOT NULL AND NOT BLDS=""
9.콜레스테롤 구분화
DELIMITER $$

CREATE FUNCTION CLASS_CHOLE(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1<200 THEN
    	RETURN 0;
	ELSEIF input1<240 THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

UPDATE GJ_UNIF_6
SET
TOT_CHOLE=CLASS_CHOLE(TOT_CHOLE)
WHERE TOT_CHOLE IS NOT NULL AND NOT TOT_CHOLE=""

💥💥💥💥10.혈색소 구분화(성별 정보 필요)
DELIMITER $$

CREATE FUNCTION CLASS_HMG(input1 text,input2 text) RETURNS int
	DETERMINISTIC
BEGIN
    IF input1=1 THEN
    	IF input2>16.5 THEN
   		 RETURN 9;
   	 ELSEIF input2>=13 THEN
   		 RETURN 0;
   	 ELSEIF input2>=12 THEN
   		 RETURN 1;
   	 ELSE
   		 RETURN 2;
   	 END IF;
    ELSEIF input1=2 THEN
   	 IF input2>15.5 THEN
   		 RETURN 9;
   	 ELSEIF input2>=12 THEN
   		 RETURN 0;
   	 ELSEIF input2>=10 THEN
   		 RETURN 1;
   	 ELSE
   		 RETURN 2;
   	 END IF;
    END IF;
END

//

UPDATE table
SET
HMG=CLASS_HMG(SEX,HMG)
WHERE HMG IS NOT NULL AND NOT HMG=""

10.GJ_UNIF_7 (요당,요잠혈,요PH삭제)
CREATE TABLE GJ_UNIF_7 AS
(
SELECT
    `GJ_UNIF_6`.`HCHK_YEAR`,    
	`GJ_UNIF_6`.`PERSON_ID`,
	`GJ_UNIF_6`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_6`.`BMI`,
	`GJ_UNIF_6`.`BP`,
	`GJ_UNIF_6`.`BLDS`,
	`GJ_UNIF_6`.`TOT_CHOLE`,
	`GJ_UNIF_6`.`TRIGLYCERIDE`,
	`GJ_UNIF_6`.`HDL_CHOLE`,
	`GJ_UNIF_6`.`LDL_CHOLE`,
	`GJ_UNIF_6`.`HMG`,
	`GJ_UNIF_6`.`OLIG_PROTE_CD`,
	`GJ_UNIF_6`.`CREATININE`,
	`GJ_UNIF_6`.`SGOT_AST`,
	`GJ_UNIF_6`.`SGPT_ALT`,
	`GJ_UNIF_6`.`GAMMA_GTP`,
	`GJ_UNIF_6`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_6`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_6`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_6`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_6`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_6`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_6`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_6`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_6`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_6`.`PAST_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_6`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_6`.`CUR_SMK_TERM_RSPS_CD`,
	`GJ_UNIF_6`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_6`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_6`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_6`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_6`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_6`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_6`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_6`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_6
)

11.요단백 구분화

DELIMITER $$

CREATE FUNCTION CLASS_PROTE(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1=1 THEN
    	RETURN 0;
	ELSEIF input1=2 THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

UPDATE GJ_UNIF_7
SET
OLIG_PROTE_CD=CLASS_PROTE(OLIG_PROTE_CD)
WHERE OLIG_PROTE_CD IS NOT NULL AND NOT OLIG_PROTE_CD=""
12.혈청지오티 구분화
DELIMITER $$

CREATE FUNCTION CLASS_AST(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1<=40 THEN
    	RETURN 0;
	ELSEIF input1<51 THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

UPDATE GJ_UNIF_7
SET
OLIG_PROTE_CD=CLASS_PROTE(OLIG_PROTE_CD)
WHERE SGOT_AST IS NOT NULL AND NOT SGOT_AST=""

13.혈청지피티 구분화
DELIMITER $$

CREATE FUNCTION CLASS_ALT(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1<=35 THEN
    	RETURN 0;
	ELSEIF input1<46 THEN
    	RETURN 1;
	ELSE
    	RETURN 2;
	END IF;
END

//

UPDATE GJ_UNIF_7
SET
SGPT_ALT=CLASS_ALT(SGPT_ALT)
WHERE SGPT_ALT IS NOT NULL AND NOT SGPT_ALT=""
💥💥💥💥14.감마지티피 구분화(성별필요)피
DELIMITER $$

CREATE FUNCTION CLASS_GTP(input1 text,input2 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1=1 THEN
    	IF input2<11 THEN
        	RETURN 9;
    	ELSEIF input2<64 THEN
        	RETURN 0;
    	ELSEIF input2<78 THEN
        	RETURN 1;
    	ELSE
        	RETURN 2;
    	END IF;
	ELSEIF input1=2 THEN
    	IF input2<8 THEN
        	RETURN 9;
    	ELSEIF input2<36 THEN
        	RETURN 0;
    	ELSEIF input2<46 THEN
        	RETURN 1;
    	ELSE
        	RETURN 2;
    	END IF;
	END IF;
END

//

UPDATE table
SET
GAMMA_GTP=CLASS_GTP(SEX,GAMMA_GTP)
WHERE GAMMA_GTP IS NOT NULL AND NOT GAMMA_GTP=""
15.SMK_STAT 일원화
DELIMITER $$

CREATE FUNCTION MINUS_1(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	RETURN input1-1;
END

도메인:1~3 ->0~2

//

UPDATE GJ_UNIF_7
SET
SMK_STAT_TYPE_RSPS_CD=MINUS_1(SMK_STAT_TYPE_RSPS_CD)
WHERE NOT (SMK_STAT_TYPE_RSPS_CD="" AND SMK_STAT_TYPE_RSPS_CD="")
16.SMK_TERM 일원화
도메인: 1~5 -> 0~5(0추가)

CONV_SMK
DELIMITER $$

CREATE FUNCTION CONV_SMK(input1 text,input2 text) RETURNS int
    DETERMINISTIC
BEGIN
	IF input1+input2=0 THEN
		RETURN 0;
	ELSEIF input1+input2 <5 THEN
		RETURN 1;
	ELSEIF input1+input2 <10 THEN
		RETURN 2;
	ELSEIF input1+input2 <20 THEN
		RETURN 3;
	ELSEIF input1+input2 <30 THEN
		RETURN 4;
	ELSE
		RETURN 5;
	END IF;
END

//

UPDATE GJ_UNIF_7
SET
SMK_TERM_RSPS_CD=CONV_SMK(PAST_SMK_TERM_RSPS_CD,CUR_SMK_TERM_RSPS_CD)
WHERE NOT (PAST_SMK_TERM_RSPS_CD="" AND CUR_SMK_TERM_RSPS_CD="")

//

SELECT HCHK_YEAR,SMK_TERM_RSPS_CD,PAST_SMK_TERM_RSPS_CD,CUR_SMK_TERM_RSPS_CD
FROM GJ_UNIF_7
WHERE HCHK_YEAR>2008
17.GJ_UNIF_8 (PAST_SMK_TERM_RSPS_CD,CUR_SMK_TERM_RSPS_CD삭제)
CREATE TABLE GJ_UNIF_8 AS
(
SELECT
    `GJ_UNIF_7`.`HCHK_YEAR`,
	`GJ_UNIF_7`.`PERSON_ID`,
	`GJ_UNIF_7`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_7`.`BMI`,
	`GJ_UNIF_7`.`BP`,
	`GJ_UNIF_7`.`BLDS`,
	`GJ_UNIF_7`.`TOT_CHOLE`,
	`GJ_UNIF_7`.`TRIGLYCERIDE`,
	`GJ_UNIF_7`.`HDL_CHOLE`,
	`GJ_UNIF_7`.`LDL_CHOLE`,
	`GJ_UNIF_7`.`HMG`,
	`GJ_UNIF_7`.`OLIG_PROTE_CD`,
	`GJ_UNIF_7`.`CREATININE`,
	`GJ_UNIF_7`.`SGOT_AST`,
	`GJ_UNIF_7`.`SGPT_ALT`,
	`GJ_UNIF_7`.`GAMMA_GTP`,
	`GJ_UNIF_7`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_7`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_7`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_7`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_7`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_7`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_7`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_7`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_7`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_7`.`PAST_DSQTY_RSPS_CD`,
	`GJ_UNIF_7`.`CUR_DSQTY_RSPS_CD`,
	`GJ_UNIF_7`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_7`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_7`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_7`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_7`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_7`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_7`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_7
)
18.DSQTY_RSPS 일원화
DSQTY_RSPS 일원화

프레임: 1~4 -> 0~4(0추가)
(과거)하루흡연량 삭제 : ~2008은 (과거)하루흡연량 없음
CONV_DSQTY
DELIMITER $$

CREATE FUNCTION CONV_DSQTY(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
    IF input1=0 THEN
   	 RETURN 0;
    ELSEIF input1<10 THEN
   	 RETURN 1;
    ELSEIF input1<20 THEN
   	 RETURN 2;
    ELSEIF input1<40 THEN
   	 RETURN 3;
    ELSE
   	 RETURN 4;
    END IF;
END

//

UPDATE GJ_UNIF_8
SET
DSQTY_RSPS_CD=CONV_DSQTY(CUR_DSQTY_RSPS_CD)
WHERE NOT (CUR_DSQTY_RSPS_CD="")

//

SELECT DSQTY_RSPS_CD,CUR_DSQTY_RSPS_CD
FROM GJ_UNIF_8
WHERE HCHK_YEAR>2008

19.GJ_UNIF_9 (PAST_DSQTY_RSPS_CD,CUR_DSQTY_RSPS_CD 삭제)
CREATE TABLE GJ_UNIF_9 AS
(
SELECT
    `GJ_UNIF_8`.`HCHK_YEAR`,
	`GJ_UNIF_8`.`PERSON_ID`,
	`GJ_UNIF_8`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_8`.`BMI`,
	`GJ_UNIF_8`.`BP`,
	`GJ_UNIF_8`.`BLDS`,
	`GJ_UNIF_8`.`TOT_CHOLE`,
	`GJ_UNIF_8`.`TRIGLYCERIDE`,
	`GJ_UNIF_8`.`HDL_CHOLE`,
	`GJ_UNIF_8`.`LDL_CHOLE`,
	`GJ_UNIF_8`.`HMG`,
	`GJ_UNIF_8`.`OLIG_PROTE_CD`,
	`GJ_UNIF_8`.`CREATININE`,
	`GJ_UNIF_8`.`SGOT_AST`,
	`GJ_UNIF_8`.`SGPT_ALT`,
	`GJ_UNIF_8`.`GAMMA_GTP`,
	`GJ_UNIF_8`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_8`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_8`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_8`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_8`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_8`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_8`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_8`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_8`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_8`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_8`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_8`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_8`.`EXERCI_FREQ_RSPS_CD`,
	`GJ_UNIF_8`.`MOV20_WEK_FREQ_ID`,
	`GJ_UNIF_8`.`MOV30_WEK_FREQ_ID`,
	`GJ_UNIF_8`.`WLK30_WEK_FREQ_ID`
FROM GJ_UNIF_8
)

20.DRNK_HABIT 일원화
CONV_DRNK
DELIMITER $$

CREATE FUNCTION CONV_DRNK(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
    IF input1=1 THEN
   	 RETURN 1;
    ELSEIF input1 <=2 THEN
   	 RETURN 2;
	ELSEIF input1 <=3 THEN
   	 RETURN 3;
    ELSEIF input1 <=5 THEN
   	 RETURN 4;
    ELSE
   	 RETURN 5;
    END IF;
END

//

UPDATE GJ_UNIF_9
SET
DRNK_HABIT_RSPS_CD=CONV_DRNK(DRNK_HABIT_RSPS_CD)
WHERE NOT (DRNK_HABIT_RSPS_CD="") AND HCHK_YEAR>2008

//

SELECT DRNK_HABIT_RSPS_CD
FROM GJ_UNIF_9
WHERE HCHK_YEAR>2008
21.DRNK_HABIT 도메인 변경
UPDATE GJ_UNIF_9
SET
DRNK_HABIT_RSPS_CD=MINUS_1(DRNK_HABIT_RSPS_CD)
WHERE DRNK_HABIT_RSPS_CD IS NOT NULL AND NOT DRNK_HABIT_RSPS_CD=""
22.GJ_UNIF_10 (삭제는 없음)
CREATE TABLE GJ_UNIF_10 AS
(
SELECT *
FROM GJ_UNIF_9
)
f21.DRKQTY일원화
프레임:1~4 -> 0~4(0추가)

CONV_DRKQTY
DELIMITER $$

CREATE FUNCTION CONV_DRKQTY(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1=0 THEN
    	RETURN 0;
	ELSEIF input1 <4 THEN
    	RETURN 1;
	ELSEIF input1 <11 THEN
    	RETURN 2;
	ELSEIF input1 <14 THEN
    	RETURN 3;
	ELSE
    	RETURN 4;
	END IF;
END

//

UPDATE GJ_UNIF_10
SET
TM1_DRKQTY_RSPS_CD=CONV_DRKQTY(TM1_DRKQTY_RSPS_CD)
WHERE (NOT TM1_DRKQTY_RSPS_CD="") AND HCHK_YEAR>2008

//

SELECT TM1_DRKQTY_RSPS_CD
FROM GJ_UNIF_10
WHERE HCHK_YEAR>2008
22.GJ_UNIF_11 (삭제는 없음)
CREATE TABLE GJ_UNIF_6 AS(
SELECT *
FROM GJ_UNIF_5
)
23.EXERCISE 일원화
참고: 건강증진을 위한 운동기준 2006 ~ 신체활동ㆍ운동ㆍ체력 ~ 보고서 운동소요량ㆍ운동지침의 책정검토회
http://www.nibiohn.go.jp/files/guidelines2006_ko.pdf

참고: COUNT_EXERCISE_분석.xlsx

3개=>1개로 일원화
Data 분포를 보고 상중하[2,1,0]로 구분
WLK30_WEK_FREQ_ID는 변별력이 없으므로 일원화에서 제외시키고
MOV20_WEK_FREQ_ID, MOV30_WEK_FREQ_ID 를 각 각
기각: 상중하는 너무 러프함.

가중치 주는 방식사용
가중치 기준: 건강증진을 위한 운동기준; MET단위
그룹핑 기준: ~2008 까지의 운동횟수 분포 퍼센테이지

생활습관병 발병 예방 효과가 있는 신체 활동의 하한치 19 METS 시간/주 ~ 23 METS 시간/주
이에 해당하는 주 당 1일 신체활동은 3METS 정도의 강도(기준치)

2METS의 강도는 운동 습관이 없다고 가정
운동 종류에따른 강도가 다르기 때문에 걷기를 기준으로 METs 기준설정

(저강도)보통 보행 : 3.0 ⇒ 한시간 기준 
(중강도)속보 :5.0 ⇒ 30분 기준
(고강도)러닝,달리기 : 10.0 ⇒ 20분 기준
분포확인 쿼리

select EXERCI_FREQ_RSPS_CD,MOV20_WEK_FREQ_ID,MOV30_WEK_FREQ_ID,WLK30_WEK_FREQ_ID,MOV20_WEK_FREQ_ID*10 + MOV30_WEK_FREQ_ID*5 + WLK30_WEK_FREQ_ID*3 AS SUMM,
		@curRank := @curRank + 1 AS curRank
from gj_an100,(SELECT @curRank:=0)r
ORDER BY SUMM desc

total# 1144821

가정1. ~2008년 운동횟수분포과 2009~운동횟수분포는 비슷할 것.
가정2. 운동횟수는 METS양과 비례할 것.

참고 :EXERCISE_UNIFICATION_REASON 참고
CONV_EXERCI
DELIMITER $$

CREATE FUNCTION CONV_EXERCI(input1 text,input2 text,input3 text) RETURNS int
	DETERMINISTIC
BEGIN
    DECLARE EXER_SUM int;
	SET EXER_SUM= input1*10+input2*5+input3*3;
    IF EXER_SUM<37 THEN
   	 RETURN 1;
    ELSEIF EXER_SUM<62 THEN
   	 RETURN 2;
    ELSEIF EXER_SUM<85 THEN
   	 RETURN 3;
    ELSEIF EXER_SUM<97 THEN
   	 RETURN 4;
    ELSE
   	 RETURN 5;
    END IF;
END

//

UPDATE GJ_UNIF_11
SET
EXERCI_FREQ_RSPS_CD=CONV_EXERCI(MOV20_WEK_FREQ_ID,MOV30_WEK_FREQ_ID,WLK30_WEK_FREQ_ID)
WHERE NOT (MOV20_WEK_FREQ_ID="" AND MOV30_WEK_FREQ_ID="" AND WLK30_WEK_FREQ_ID="") AND HCHK_YEAR>2008

//

SELECT EXERCI_FREQ_RSPS_CD,MOV20_WEK_FREQ_ID,MOV30_WEK_FREQ_ID,WLK30_WEK_FREQ_ID
FROM GJ_UNIF_11
where HCHK_YEAR>2008

24.EXERCISE 도메인 변경
UPDATE GJ_UNIF_11
SET
EXERCI_FREQ_RSPS_CD=MINUS_1(EXERCI_FREQ_RSPS_CD)
WHERE EXERCI_FREQ_RSPS_CD IS NOT NULL AND NOT EXERCI_FREQ_RSPS_CD=""
25.GJ_UNIF_12 (MOV20_WEK_FREQ_ID,MOV30_WEK_FREQ_ID,WLK30_WEK_FREQ_ID 삭제)
CREATE TABLE GJ_UNIF_12 AS
(
SELECT
    `GJ_UNIF_11`.`HCHK_YEAR`,
	`GJ_UNIF_11`.`PERSON_ID`,
	`GJ_UNIF_11`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_11`.`BMI`,
	`GJ_UNIF_11`.`BP`,
	`GJ_UNIF_11`.`BLDS`,
	`GJ_UNIF_11`.`TOT_CHOLE`,
	`GJ_UNIF_11`.`TRIGLYCERIDE`,
	`GJ_UNIF_11`.`HDL_CHOLE`,
	`GJ_UNIF_11`.`LDL_CHOLE`,
	`GJ_UNIF_11`.`HMG`,
	`GJ_UNIF_11`.`OLIG_PROTE_CD`,
	`GJ_UNIF_11`.`CREATININE`,
	`GJ_UNIF_11`.`SGOT_AST`,
	`GJ_UNIF_11`.`SGPT_ALT`,
	`GJ_UNIF_11`.`GAMMA_GTP`,
	`GJ_UNIF_11`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_11`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_11`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_11`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_11`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_11`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_11`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_11`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_11`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_11`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_11`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_11`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_11`.`EXERCI_FREQ_RSPS_CD`
FROM GJ_UNIF_11
)
26.GJ_UNIF_13 (~2008결측 데이터 삭제)
회귀분석에서 50%이상 결측치는 의미없음

WAIST(이전에 이미 삭제함)
TRIGLYCERIDE
HDL_CHOLE
LDL_CHOLE
CREATININE
삭제

CREATE TABLE GJ_UNIF_13 AS
(
SELECT
    `GJ_UNIF_12`.`HCHK_YEAR`,
	`GJ_UNIF_12`.`PERSON_ID`,
	`GJ_UNIF_12`.`YKIHO_GUBUN_CD`,
	`GJ_UNIF_12`.`BMI`,
	`GJ_UNIF_12`.`BP`,
	`GJ_UNIF_12`.`BLDS`,
	`GJ_UNIF_12`.`TOT_CHOLE`,
	`GJ_UNIF_12`.`HMG`,
	`GJ_UNIF_12`.`OLIG_PROTE_CD`,
	`GJ_UNIF_12`.`SGOT_AST`,
	`GJ_UNIF_12`.`SGPT_ALT`,
	`GJ_UNIF_12`.`GAMMA_GTP`,
	`GJ_UNIF_12`.`HCHK_APOP_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_HDISE_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_HPRTS_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_DIABML_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_HPLPDM_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_PHSS_PMH_YN`,
	`GJ_UNIF_12`.`HCHK_ETCDSE_PMH_YN`,
	`GJ_UNIF_12`.`FMLY_APOP_PATIEN_YN`,
	`GJ_UNIF_12`.`FMLY_HDISE_PATIEN_YN`,
	`GJ_UNIF_12`.`FMLY_HPRTS_PATIEN_YN`,
	`GJ_UNIF_12`.`FMLY_DIABML_PATIEN_YN`,
	`GJ_UNIF_12`.`FMLY_CANCER_PATIEN_YN`,
	`GJ_UNIF_12`.`SMK_STAT_TYPE_RSPS_CD`,
	`GJ_UNIF_12`.`SMK_TERM_RSPS_CD`,
	`GJ_UNIF_12`.`DSQTY_RSPS_CD`,
	`GJ_UNIF_12`.`DRNK_HABIT_RSPS_CD`,
	`GJ_UNIF_12`.`TM1_DRKQTY_RSPS_CD`,
	`GJ_UNIF_12`.`EXERCI_FREQ_RSPS_CD`
FROM GJ_UNIF_12
)
27.결측치 분석
회귀분석에서 50%이상 결측치는 의미없음

SELECT
	SUM(ISNULL(`HCHK_YEAR`))+SUM(ISBLANK(`HCHK_YEAR`)),
	SUM(ISNULL(`PERSON_ID`))+SUM(ISBLANK(`PERSON_ID`)),
	SUM(ISNULL(`YKIHO_GUBUN_CD`))+SUM(ISBLANK(`YKIHO_GUBUN_CD`)),
	SUM(ISNULL(`BMI`))+SUM(ISBLANK(`BMI`)),
	SUM(ISNULL(`BP`))+SUM(ISBLANK(`BP`)),
	SUM(ISNULL(`BLDS`))+SUM(ISBLANK(`BLDS`)),
	SUM(ISNULL(`TOT_CHOLE`))+SUM(ISBLANK(`TOT_CHOLE`)),
	SUM(ISNULL(`HMG`))+SUM(ISBLANK(`HMG`)),
	SUM(ISNULL(`OLIG_PROTE_CD`))+SUM(ISBLANK(`OLIG_PROTE_CD`)),
	SUM(ISNULL(`SGOT_AST`))+SUM(ISBLANK(`SGOT_AST`)),
	SUM(ISNULL(`SGPT_ALT`))+SUM(ISBLANK(`SGPT_ALT`)),
	SUM(ISNULL(`GAMMA_GTP`))+SUM(ISBLANK(`GAMMA_GTP`)),
	SUM(ISNULL(`HCHK_APOP_PMH_YN`))+SUM(ISBLANK(`HCHK_APOP_PMH_YN`)),
	SUM(ISNULL(`HCHK_HDISE_PMH_YN`))+SUM(ISBLANK(`HCHK_HDISE_PMH_YN`)),
	SUM(ISNULL(`HCHK_HPRTS_PMH_YN`))+SUM(ISBLANK(`HCHK_HPRTS_PMH_YN`)),
	SUM(ISNULL(`HCHK_DIABML_PMH_YN`))+SUM(ISBLANK(`HCHK_DIABML_PMH_YN`)),
	SUM(ISNULL(`HCHK_HPLPDM_PMH_YN`))+SUM(ISBLANK(`HCHK_HPLPDM_PMH_YN`)),
	SUM(ISNULL(`HCHK_PHSS_PMH_YN`))+SUM(ISBLANK(`HCHK_PHSS_PMH_YN`)),
	SUM(ISNULL(`HCHK_ETCDSE_PMH_YN`))+SUM(ISBLANK(`HCHK_ETCDSE_PMH_YN`)),
	SUM(ISNULL(`FMLY_APOP_PATIEN_YN`))+SUM(ISBLANK(`FMLY_APOP_PATIEN_YN`)),
	SUM(ISNULL(`FMLY_HDISE_PATIEN_YN`))+SUM(ISBLANK(`FMLY_HDISE_PATIEN_YN`)),
	SUM(ISNULL(`FMLY_HPRTS_PATIEN_YN`))+SUM(ISBLANK(`FMLY_HPRTS_PATIEN_YN`)),
	SUM(ISNULL(`FMLY_DIABML_PATIEN_YN`))+SUM(ISBLANK(`FMLY_DIABML_PATIEN_YN`)),
	SUM(ISNULL(`FMLY_CANCER_PATIEN_YN`))+SUM(ISBLANK(`FMLY_CANCER_PATIEN_YN`)),
	SUM(ISNULL(`SMK_STAT_TYPE_RSPS_CD`))+SUM(ISBLANK(`SMK_STAT_TYPE_RSPS_CD`)),
	SUM(ISNULL(`SMK_TERM_RSPS_CD`))+SUM(ISBLANK(`SMK_TERM_RSPS_CD`)),
	SUM(ISNULL(`DSQTY_RSPS_CD`))+SUM(ISBLANK(`DSQTY_RSPS_CD`)),
	SUM(ISNULL(`DRNK_HABIT_RSPS_CD`))+SUM(ISBLANK(`DRNK_HABIT_RSPS_CD`)),
	SUM(ISNULL(`TM1_DRKQTY_RSPS_CD`))+SUM(ISBLANK(`TM1_DRKQTY_RSPS_CD`)),
	SUM(ISNULL(`EXERCI_FREQ_RSPS_CD`))+SUM(ISBLANK(`EXERCI_FREQ_RSPS_CD`))    
FROM GJ_UNIF_13

//

Total : SELECT COUNT(*) FROM GJ = 2210067

//

참고 : COUNT_GJ_분석.xlsx

//

분석

`HCHK_APOP_PMH_YN`, `HCHK_HDISE_PMH_YN`, `HCHK_HPRTS_PMH_YN`, `HCHK_DIABML_PMH_YN`, `HCHK_HPLPDM_PMH_YN`, `HCHK_PHSS_PMH_YN`, `HCHK_ETCDSE_PMH_YN`, `FMLY_APOP_PATIEN_YN`, `FMLY_HDISE_PATIEN_YN`, `FMLY_HPRTS_PATIEN_YN`, `FMLY_DIABML_PATIEN_YN`, `FMLY_CANCER_PATIEN_YN`
는 40%가량 응답안함.
이 경우는 
Column 을 제외하면 핵심 column이 제외되는것이기 떄문에 제외할 순 없음
Row 를 제거하기로 하였음.
위의 항목에서 null, 또는 ""를 포함하는 환자들을 제외하기로 함.

<`SMK_TERM_RSPS_CD`, `DSQTY_RSPS_CD`>
는  `SMK_STAT_TYPE_RSPS`에서 1(담배를 피지 않는다)라고 한 경우에 무응답을 하였기 때문에 결측치가 높았음.
`SMK_STAT_TYPE_RSPS`에서 1이라 응답한 경우는  `SMK_TERM_RSPS_CD`, `DSQTY_RSPS_CD`가 무응답일 경우, 각각 0(피우지 않는다)를 할당하기로 결정.
<`TM1_DRKQTY_RSPS_CD`>
또한 `DRNK_HABIT_RSPS_CD`에서 1(술을 마시지 않는다)라고 한 경우에 무응답을 하였기 때문에 결측치가 높았음.
`DRNK_HABIT_RSPS_CD`에서 1이라 응답한 경우는 `TM1_DRKQTY_RSPS_CD`가 무응답일 경우, 각각 0(마시지 않는다)를 할당하기로 결정.

28.IMPUTATION_1(결측값 메꾸기)

결측값 대체(imputation)

DELIMITER $$

CREATE FUNCTION IMPUTATION(input1 text,input2 text) RETURNS int
	DETERMINISTIC
BEGIN
    DECLARE itself INT;
	SET itself=0+input2;
	IF input2 is NULL OR input2="" THEN
    	IF input1=0 THEN
        	RETURN 0;
   	 ELSE RETURN itself;
    	END IF;
	ELSE RETURN itself;
	END IF;
END

//


<SMK IMPUTATION>
<`SMK_TERM_RSPS_CD`, `DSQTY_RSPS_CD`>
는  `SMK_STAT_TYPE_RSPS`에서 0(담배를 피지 않는다)라고 한 경우에 무응답을 하였기 때문에 결측치가 높았음.
`SMK_STAT_TYPE_RSPS`에서 0이라 응답한 경우는  `SMK_TERM_RSPS_CD`, `DSQTY_RSPS_CD`가 무응답일 경우, 각각 0(피우지 않는다)를 할당하기로 결정.

UPDATE GJ_UNIF_13
SET
SMK_TERM_RSPS_CD=IMPUTATION(SMK_STAT_TYPE_RSPS_CD,SMK_TERM_RSPS_CD),
DSQTY_RSPS_CD=IMPUTATION(SMK_STAT_TYPE_RSPS_CD,DSQTY_RSPS_CD)
WHERE NOT(SMK_STAT_TYPE_RSPS_CD IS NULL OR SMK_STAT_TYPE_RSPS_CD="")

//

<TM1_DRKQTY IMPUTATION>
<`TM1_DRKQTY_RSPS_CD`>
또한 `DRNK_HABIT_RSPS_CD`에서 0(술을 마시지 않는다)라고 한 경우에 무응답을 하였기 때문에 결측치가 높았음.
`DRNK_HABIT_RSPS_CD`에서 0이라 응답한 경우는 `TM1_DRKQTY_RSPS_CD`가 무응답일 경우, 각각 0(마시지 않는다)를 할당하기로 결정.

UPDATE GJ_UNIF_13
SET
TM1_DRKQTY_RSPS_CD=IMPUTATION(DRNK_HABIT_RSPS_CD,TM1_DRKQTY_RSPS_CD)
WHERE NOT(DRNK_HABIT_RSPS_CD IS NULL OR DRNK_HABIT_RSPS_CD="")

//

SELECT SMK_STAT_TYPE_RSPS_CD,SMK_TERM_RSPS_CD,DSQTY_RSPS_CD,DRNK_HABIT_RSPS_CD,TM1_DRKQTY_RSPS_CD
FROM GJ_UNIF_10;
29.IMPUTATION_2(결측값 메꾸기)
IMPUTATION_1 이후 
SMK_TERM_RSPS_CD와 DSQTY_RSPS_CD의 값이 SMK_STAT_TYPS_RSPS_CD와 값이 같도록 예상함.
하지만 DSQTY_RSPS_CD의 결측값이 같지 않고 더 높았음.
그 이유는 일원화 과정에서 과거에만 담배를 피었던 사람들의 경우에는 DSQTY_RSPS_CD의 값이 null 값으로 처리되었기 때문이다.

//
참고
SELECT SMK_STAT_TYPE_RSPS_CD,SMK_TERM_RSPS_CD,DSQTY_RSPS_CD,DRNK_HABIT_RSPS_CD,TM1_DRKQTY_RSPS_CD
FROM GJ_UNIF_11
WHERE NOT (SMK_STAT_TYPE_RSPS_CD IS NULL OR SMK_STAT_TYPE_RSPS_CD ="") AND (DSQTY_RSPS_CD IS NULL OR DSQTY_RSPS_CD="")
//

현재는 담패를 안피기 떄문에 IMPUTATION_2에선 DSQTY_RSPS_CD의 값을 0으로 할당한다.

//
UPDATE GJ_UNIF_13
SET
DSQTY_RSPS_CD=0
WHERE NOT (SMK_STAT_TYPE_RSPS_CD IS NULL OR SMK_STAT_TYPE_RSPS_CD ="") AND (DSQTY_RSPS_CD IS NULL OR DSQTY_RSPS_CD="")

//
SELECT SMK_STAT_TYPE_RSPS_CD,SMK_TERM_RSPS_CD,DSQTY_RSPS_CD,DRNK_HABIT_RSPS_CD,TM1_DRKQTY_RSPS_CD
FROM GJ_UNIF_11;

30.GJ_UNIF(일원화 최종 테이블)
CREATE TABLE GJ_UNIF AS
(
SELECT *
FROM GJ_UNIF_13
)
;
CREATE INDEX person ON GJ_UNIF(PERSON_ID,HCHK_YEAR)


인덱스 추가해야함
인덱스 없으니 조인할떄 시간 오래걸림
혈색소 감마지티피 분포화 해야함

◉자격 테이블(JK) 구분화
! jk테이블 복사본(JK_COPY) 미리 만들고 UPDATE하기

CREATE TABLE JK_COPY AS
(
SELECT *
FROM jk
)

1.AGE_GROUP(연령대) 구분화
DELIMITER $$

CREATE FUNCTION CLASS_AGE(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
    IF input1<=6 THEN
   	 RETURN 1;
    ELSEIF input1<=8 THEN
   	 RETURN 2;
    ELSEIF input1<=10 THEN
   	 RETURN 3;
    ELSEIF input1<=12 THEN
   	 RETURN 4;
    ELSEIF input1<=14 THEN
   	 RETURN 5;
    ELSEIF input1<=16 THEN
   	 RETURN 6;
    ELSE
   	 RETURN 7;
    END IF;
END





//

UPDATE JK_UNIF_1
SET
AGE_GROUP=CLASS_AGE(AGE_GROUP)
WHERE AGE_GROUP IS NOT NULL AND NOT AGE_GROUP=""

2.SIDO(시도코드) 구분화
DELIMITER $$

CREATE FUNCTION CLASS_SIDO(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
    IF input1=11 THEN
   	 RETURN 1;
    ELSEIF input1<=31 THEN
   	 RETURN 2;
    ELSEIF input1=36 THEN
   	 RETURN 4;
    ELSEIF input1<=48 THEN
   	 RETURN 3;
    ELSE
   	 RETURN 5;
    END IF;
END

//

UPDATE JK_UNIF_1
SET
SIDO=CLASS_SIDO(SIDO)
WHERE SIDO IS NOT NULL AND NOT SIDO=""


3.IPSN_TYPE(가입자구분) 구분화
DELIMITER $$

CREATE FUNCTION CLASS_IPSN(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1<=2 THEN
   	 RETURN 1;
    ELSEIF input1<=6 THEN
   	 RETURN 2;
    ELSE
   	 RETURN 3;
	END IF;
END

//

UPDATE JK_UNIF_1
SET
IPSN_TYPE_CD=CLASS_IPSN(IPSN_TYPE_CD)
WHERE IPSN_TYPE_CD IS NOT NULL AND NOT IPSN_TYPE_CD=""

4.CTRB_PT(소득분위) 구분화
DELIMITER $$

CREATE FUNCTION CLASS_CTRB(input1 text) RETURNS int
	DETERMINISTIC
BEGIN
	IF input1=0 THEN
   	 RETURN 0;
    ELSEIF input1<=3 THEN
   	 RETURN 1;
    ELSEIF input1<=6 THEN
   	 RETURN 2;
    ELSEIF input1<=9 THEN
   	 RETURN 3;	 
    ELSE
   	 RETURN 4;
	END IF;
END

//

UPDATE JK_UNIF_1
SET
CTRB_PT_TYPE_CD=CLASS_CTRB(CTRB_PT_TYPE_CD)
WHERE CTRB_PT_TYPE_CD IS NOT NULL AND NOT CTRB_PT_TYPE_CD=""




5.JK_UNIF 최종 (DTH_YM,DTH_CODE1,DTH_CODE2,DFAB_REG_YM,SGG 제거)
DTH_YM,DTH_CODE1,DTH_CODE2,DFAB_REG_YM,SGG 제거
회귀분석에 유효성이 없음.
SGG는 SIDO에 포함

CREATE TABLE JK_UNIF AS
(
SELECT
    `JK_UNIF_1`.`STND_Y`,
	`JK_UNIF_1`.`PERSON_ID`,
	`JK_UNIF_1`.`SEX`,
	`JK_UNIF_1`.`AGE_GROUP`,
	`JK_UNIF_1`.`SIDO`,
	`JK_UNIF_1`.`SGG`,
	`JK_UNIF_1`.`IPSN_TYPE_CD`,
	`JK_UNIF_1`.`CTRB_PT_TYPE_CD`,
	`JK_UNIF_1`.`DFAB_GRD_CD`,
	`JK_UNIF_1`.`DFAB_PTN_CD`
FROM JK_UNIF_1
)
;
CREATE INDEX person ON JK_UNIF(PERSON_ID,STND_Y)

인덱스 추가하기

◉실험군
2형 고혈압(I109*)을 진단받은 사람
+자격 데이터
+진단 최초년 기준으로 2년전,4년전,6년전 검진 데이터

1. T120_I109
- 명세 테이블(T120)
- T120에서 MAIN_SICK이 I109*인 레코드로 만든 DB (T120_I109)
CREATE T120_I109
CREATE TABLE T120_I109 AS(
SELECT T1.*
FROM namzle.T120 AS T1
WHERE T1.MAIN_SICK LIKE “I109%”
)
;
CREATE INDEX person ON T120_I109(PERSON_ID)

- MAIN_SICK : I109*
- MIN(RECU_FR_DT : 최초내원일자, 조제투여일자)
- SQL : SELECT COUNT(DISTINCT(PERSON_ID)) FROM namzle.T120_I109;

2. T120_I109_YEAR
- 1에서 고혈압 환자로 판정된 사람의 최초 진단 해로 구성된 테이블
- 필드 구성: PERSON_ID,MIN_YEAR,MAIN_SICKS
CREATE TABLE T120_I109_YEAR
CREATE TABLE T120_I109_YEAR AS
(
    SELECT
   	 T1.PERSON_ID, T1.MIN_YEAR, GROUP_CONCAT(DISTINCT(MAIN_SICK) SEPARATOR '/') AS MAIN_SICKS
    FROM
   	 (
    	SELECT PERSON_ID, MIN(YEAR(RECU_FR_DT)) AS MIN_YEAR
   	 FROM namzle.T120_I109
   	 GROUP BY PERSON_ID
   	 ) AS T1
    RIGHT JOIN T120_I109 AS T2
   	 ON T1.PERSON_ID = T2.PERSON_ID
    WHERE T1.MIN_YEAR = YEAR(T2.RECU_FR_DT)
	GROUP BY T1.PERSON_ID
)
;
CREATE INDEX person ON T120_I109_YEAR(PERSON_ID,MIN_YEAR)


3. T120_I109_YEAR_JK
- 2에 포함된 사람들 중 사망자를 제외한 자격 정보 테이블
- 테이블 2에 포함된 MIN_YEAR와 PERSON_ID에 해당하는 자격정보로 구성된 테이블
- 필드 구성: PERSON_ID,MIN_YEAR,MAIN_SICKS,자격정보
CREATE TABLE T120_I109_YEAR_JK
CREATE TABLE T120_I109_YEAR_JK AS (
	SELECT
   	 T2.`PERSON_ID`,
   	 T2.`MIN_YEAR`,
   	 T2.`MAIN_SICKS`,
   	 T1.`SEX`,
   	 T1.`AGE_GROUP`,
   	 T1.`SIDO`,
   	 T1.`IPSN_TYPE_CD`,
   	 T1.`CTRB_PT_TYPE_CD`,
   	 T1.`DFAB_GRD_CD`,
   	 T1.`DFAB_PTN_CD`
	FROM JK_UNIF AS T1
	LEFT JOIN T120_I109_YEAR AS T2
	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.STND_Y = T2.MIN_YEAR AND DTH_YM =""
)
;
CREATE INDEX person ON T120_I109_YEAR_JK(PERSON_ID,MIN_YEAR)

#94712

4.과거질병이력이 전년도의 결과를 포함하는지 검증.
PERSON_ID, MAX_YEAR in GJ 테이블

CREATE TABLE GJ_UNIF_TEST_ALL AS
(
	SELECT T1.PERSON_ID, T1.MAX_YEAR
	FROM
    	(
    	SELECT PERSON_ID, MAX(HCHK_YEAR) AS MAX_YEAR
    	FROM GJ_UNIF
    	GROUP BY PERSON_ID
    	) AS T1
	RIGHT JOIN GJ_UNIF AS T2
    	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.MAX_YEAR = T2.HCHK_YEAR
	GROUP BY T1.PERSON_ID
)

CREATE TABLE GJ_UNIF_TEST_1 AS (
	SELECT
    	T2.`PERSON_ID`,
    	T2.`MAX_YEAR`,
    	T1.`HCHK_YEAR` AS `0Y_HCHK_YEAR`,
   	 T1.`HCHK_APOP_PMH_YN` AS `0Y_HCHK_APOP_PMH_YN`,
   	 T1.`HCHK_HDISE_PMH_YN` AS `0Y_HCHK_HDISE_PMH_YN`,
   	 T1.`HCHK_HPRTS_PMH_YN` AS `0Y_HCHK_HPRTS_PMH_YN`,
   	 T1.`HCHK_DIABML_PMH_YN` AS `0Y_HCHK_DIABML_PMH_YN`,
   	 T1.`HCHK_HPLPDM_PMH_YN` AS `0Y_HCHK_HPLPDM_PMH_YN`,
   	 T1.`HCHK_PHSS_PMH_YN` AS `0Y_HCHK_PHSS_PMH_YN`,
   	 T1.`HCHK_ETCDSE_PMH_YN` AS `0Y_HCHK_ETCDSE_PMH_YN`,
   	 T1.`FMLY_APOP_PATIEN_YN` AS `0Y_FMLY_APOP_PATIEN_YN`,
   	 T1.`FMLY_HDISE_PATIEN_YN` AS `0Y_FMLY_HDISE_PATIEN_YN`,
   	 T1.`FMLY_HPRTS_PATIEN_YN` AS `0Y_FMLY_HPRTS_PATIEN_YN`,
   	 T1.`FMLY_DIABML_PATIEN_YN` AS `0Y_FMLY_DIABML_PATIEN_YN`,
   	 T1.`FMLY_CANCER_PATIEN_YN` AS `0Y_FMLY_CANCER_PATIEN_YN`
	FROM GJ_UNIF_AN100 AS T1
	LEFT JOIN GJ_UNIF_TEST AS T2
	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.HCHK_YEAR = T2.MAX_YEAR
)

결과는 포함안함.
5.EXP_DATA_0YEAR(과거병력 추가+YEAR변수 통일)
CREATE TABLE EXP_DATA_0YEAR
(SELECT    
    T1.`PERSON_ID`,
	T1.`MIN_YEAR` AS `YEAR`,
	T1.`MAIN_SICKS`,
	T1.`SEX`,
	T1.`AGE_GROUP`,
	T1.`SIDO`,
	T1.`IPSN_TYPE_CD`,
	T1.`CTRB_PT_TYPE_CD`,
	T1.`DFAB_GRD_CD`,
	T1.`DFAB_PTN_CD`,
	T2.`HCHK_APOP_PMH_YN`,
	T2.`HCHK_HDISE_PMH_YN`,
	T2.`HCHK_HPRTS_PMH_YN`,
	T2.`HCHK_DIABML_PMH_YN`,
	T2.`HCHK_HPLPDM_PMH_YN`,
	T2.`HCHK_PHSS_PMH_YN`,
	T2.`HCHK_ETCDSE_PMH_YN`,
	T2.`FMLY_APOP_PATIEN_YN`,
	T2.`FMLY_HDISE_PATIEN_YN`,
	T2.`FMLY_HPRTS_PATIEN_YN`,
	T2.`FMLY_DIABML_PATIEN_YN`,
	T2.`FMLY_CANCER_PATIEN_YN`
FROM T120_I109_YEAR_JK AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.MIN_YEAR = (T2.HCHK_YEAR + 0) AND
	(T2.`HCHK_APOP_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_APOP_PMH_YN`  	="") AND
	(T2.`HCHK_HDISE_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HDISE_PMH_YN` 	="") AND
	(T2.`HCHK_HPRTS_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HPRTS_PMH_YN` 	="") AND
	(T2.`HCHK_DIABML_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_DIABML_PMH_YN`	="") AND
	(T2.`HCHK_HPLPDM_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_HPLPDM_PMH_YN`	="") AND
	(T2.`HCHK_PHSS_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_PHSS_PMH_YN`  	="") AND
	(T2.`HCHK_ETCDSE_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_ETCDSE_PMH_YN`	="") AND
	(T2.`FMLY_APOP_PATIEN_YN`   IS NOT NULL AND NOT T2.`FMLY_APOP_PATIEN_YN`   ="") AND
	(T2.`FMLY_HDISE_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HDISE_PATIEN_YN`  ="") AND
	(T2.`FMLY_HPRTS_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HPRTS_PATIEN_YN`  ="") AND
	(T2.`FMLY_DIABML_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_DIABML_PATIEN_YN` ="") AND
	(T2.`FMLY_CANCER_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_CANCER_PATIEN_YN` ="")
)


#12731
6. EXP_DATA_2_2,4,6YEAR
- 2테이블의 환자들이 2년전에 받았던 진단 기록 테이블
+HCHK “” 제외
- EXP_DATA_2YEAR
- EXP_DATA_4YEAR
- EXP_DATA_6YEAR
- 필드 구성: PERSON_ID,MIN_YEAR,MAIN_SICKS,자격정보,과거질병이력,2,4,6년전 검진
과거질병이력을 진단년도기준으로:  2년전이 4,6년전 진단이력 포함하지 않고 각각의 이력이 제각각일 경우
제각각임. 과거질병이력을 진단년도기준으로 하기로 함.
과거질병이력을 진단년도 2년전기준으로: 2년전이 4,6년전 진단이력 포함할 경우
혈색소, 감마지티피 구분화 함

CREATE TABLE EXP_DATA_2_2,4,6YEAR
CREATE TABLE T120_I109 AS(
SELECT T1.*
FROM namzle.T120 AS T1
WHERE T1.MAIN_SICK LIKE "I109%"
)
;
CREATE INDEX person ON T120_I109(PERSON_ID)
;
CREATE TABLE T120_I109_YEAR AS
(
	SELECT
    	T1.PERSON_ID, T1.MIN_YEAR, GROUP_CONCAT(DISTINCT(MAIN_SICK) SEPARATOR '/') AS MAIN_SICKS
	FROM
    	(
    	SELECT PERSON_ID, MIN(YEAR(RECU_FR_DT)) AS MIN_YEAR
    	FROM namzle.T120_I109
    	GROUP BY PERSON_ID
    	) AS T1
	RIGHT JOIN T120_I109 AS T2
    	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.MIN_YEAR = YEAR(T2.RECU_FR_DT)
	GROUP BY T1.PERSON_ID
)
;
CREATE INDEX person ON T120_I109_YEAR(PERSON_ID,MIN_YEAR)
;
CREATE TABLE T120_I109_YEAR_JK AS
(
	SELECT
    	T2.`PERSON_ID`,
    	T2.`MIN_YEAR`,
    	T2.`MAIN_SICKS`,
    	T1.`SEX`,
    	T1.`AGE_GROUP`,
    	T1.`SIDO`,
    	T1.`IPSN_TYPE_CD`,
    	T1.`CTRB_PT_TYPE_CD`,
    	T1.`DFAB_GRD_CD`,
    	T1.`DFAB_PTN_CD`
	FROM JK_UNIF AS T1
	LEFT JOIN T120_I109_YEAR AS T2
	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.STND_Y = T2.MIN_YEAR AND DTH_YM =""
)
;
CREATE INDEX person ON T120_I109_YEAR_JK(PERSON_ID,MIN_YEAR)
;
CREATE TABLE EXP_DATA_0YEAR
(SELECT    
	T1.`PERSON_ID`,
	T1.`MIN_YEAR` AS `YEAR`,
	T1.`MAIN_SICKS`,
	T1.`SEX`,
	T1.`AGE_GROUP`,
	T1.`SIDO`,
	T1.`IPSN_TYPE_CD`,
	T1.`CTRB_PT_TYPE_CD`,
	T1.`DFAB_GRD_CD`,
	T1.`DFAB_PTN_CD`,
	T2.`HCHK_APOP_PMH_YN`,
	T2.`HCHK_HDISE_PMH_YN`,
	T2.`HCHK_HPRTS_PMH_YN`,
	T2.`HCHK_DIABML_PMH_YN`,
	T2.`HCHK_HPLPDM_PMH_YN`,
	T2.`HCHK_PHSS_PMH_YN`,
	T2.`HCHK_ETCDSE_PMH_YN`,
	T2.`FMLY_APOP_PATIEN_YN`,
	T2.`FMLY_HDISE_PATIEN_YN`,
	T2.`FMLY_HPRTS_PATIEN_YN`,
	T2.`FMLY_DIABML_PATIEN_YN`,
	T2.`FMLY_CANCER_PATIEN_YN`
FROM T120_I109_YEAR_JK AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.MIN_YEAR = (T2.HCHK_YEAR + 0) AND
	(T2.`HCHK_APOP_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_APOP_PMH_YN`  	="") AND
	(T2.`HCHK_HDISE_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HDISE_PMH_YN` 	="") AND
	(T2.`HCHK_HPRTS_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HPRTS_PMH_YN` 	="") AND
	(T2.`HCHK_DIABML_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_DIABML_PMH_YN`	="") AND
	(T2.`HCHK_HPLPDM_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_HPLPDM_PMH_YN`	="") AND
	(T2.`HCHK_PHSS_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_PHSS_PMH_YN`  	="") AND
	(T2.`HCHK_ETCDSE_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_ETCDSE_PMH_YN`	="") AND
	(T2.`FMLY_APOP_PATIEN_YN`   IS NOT NULL AND NOT T2.`FMLY_APOP_PATIEN_YN`   ="") AND
	(T2.`FMLY_HDISE_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HDISE_PATIEN_YN`  ="") AND
	(T2.`FMLY_HPRTS_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HPRTS_PATIEN_YN`  ="") AND
	(T2.`FMLY_DIABML_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_DIABML_PATIEN_YN` ="") AND
	(T2.`FMLY_CANCER_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_CANCER_PATIEN_YN` ="")
)
;
CREATE INDEX person ON EXP_DATA_0YEAR(PERSON_ID,YEAR)
;
CREATE TABLE EXP_DATA_2_2YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `2Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `2Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `2Y_BMI`,
	T2.`BP` AS `2Y_BP`,
	T2.`BLDS` AS `2Y_BLDS`,
	T2.`TOT_CHOLE` AS `2Y_TOT_CHOLE`,
	T2.`HMG` AS `2Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `2Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `2Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `2Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `2Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `2Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `2Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `2Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `2Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `2Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `2Y_EXERCI_FREQ_RSPS_CD`
FROM EXP_DATA_0YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 2)    AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
UPDATE EXP_DATA_2_2YEAR
SET
`2Y_HMG`=CLASS_HMG(SEX,`2Y_HMG`)
WHERE
(`2Y_HMG` IS NOT NULL AND NOT `2Y_HMG`="")
;
UPDATE EXP_DATA_2_2YEAR
SET
`2Y_GAMMA_GTP`=CLASS_GTP(SEX,`2Y_GAMMA_GTP`)
WHERE
(`2Y_GAMMA_GTP` IS NOT NULL AND NOT `2Y_GAMMA_GTP`="")
;
CREATE TABLE EXP_DATA_2_4YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `4Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `4Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `4Y_BMI`,
	T2.`BP` AS `4Y_BP`,
	T2.`BLDS` AS `4Y_BLDS`,
	T2.`TOT_CHOLE` AS `4Y_TOT_CHOLE`,
	T2.`HMG` AS `4Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `4Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `4Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `4Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `4Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `4Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `4Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `4Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `4Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `4Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `4Y_EXERCI_FREQ_RSPS_CD`
FROM EXP_DATA_2_2YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 4)    AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
UPDATE EXP_DATA_2_4YEAR
SET
`4Y_HMG`=CLASS_HMG(SEX,`4Y_HMG`)
WHERE
(`4Y_HMG` IS NOT NULL AND NOT `4Y_HMG`="")
;
UPDATE EXP_DATA_2_4YEAR
SET
`4Y_GAMMA_GTP`=CLASS_GTP(SEX,`4Y_GAMMA_GTP`)
WHERE
(`4Y_GAMMA_GTP` IS NOT NULL AND NOT `4Y_GAMMA_GTP`="")
;
CREATE TABLE EXP_DATA_2_6YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `6Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `6Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `6Y_BMI`,
	T2.`BP` AS `6Y_BP`,
	T2.`BLDS` AS `6Y_BLDS`,
	T2.`TOT_CHOLE` AS `6Y_TOT_CHOLE`,
	T2.`HMG` AS `6Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `6Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `6Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `6Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `6Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `6Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `6Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `6Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `6Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `6Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `6Y_EXERCI_FREQ_RSPS_CD`
FROM EXP_DATA_2_4YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 6)    AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
UPDATE EXP_DATA_2_6YEAR
SET
`6Y_HMG`=CLASS_HMG(SEX,`6Y_HMG`)
WHERE
(`6Y_HMG` IS NOT NULL AND NOT `6Y_HMG`="")
;
UPDATE EXP_DATA_2_6YEAR
SET
`6Y_GAMMA_GTP`=CLASS_GTP(SEX,`6Y_GAMMA_GTP`)
WHERE
(`6Y_GAMMA_GTP` IS NOT NULL AND NOT `6Y_GAMMA_GTP`="")
 

◉대조군
2013년(제일 최근)까지 검진 기록이 있고,
고혈압(I109*)진단을 받은적이 한번도 없고,
부 증상으로도(I109*)진단을 받은적이 한번도 없는 환자들
+자격 데이터
+1년전,2년전,3년전,...,6년전 검진 데이터
1. T120_I109
주 증상이 고혈압(I109*)가 진단이 된 환자 레코드

CREATE TABLE T120_I109 AS
(
SELECT T1.*
FROM T120 AS T1
WHERE
    T1.MAIN_SICK LIKE "E10%" OR
    T1.MAIN_SICK LIKE "I109%" OR
    T1.MAIN_SICK LIKE "E12%" OR
    T1.MAIN_SICK LIKE "E13%" OR
    T1.MAIN_SICK LIKE "E14%"
)
;
CREATE INDEX person ON T120_I109(PERSON_ID)
2. T120_SUB_I109
부 증상이 고혈압(I109*)가 진단이 된 환자 레코드
CREATE T120_SUB_I109
CREATE TABLE T120_SUB_I109 AS
(
SELECT T1.*
FROM T120 AS T1
WHERE
    T1.SUB_SICK LIKE "E10%" OR
    T1.SUB_SICK LIKE "I109%" OR
    T1.SUB_SICK LIKE "E12%" OR
    T1.SUB_SICK LIKE "E13%" OR
    T1.SUB_SICK LIKE "E14%"
)
;
CREATE INDEX person ON T120_SUB_I109(PERSON_ID)
3. T120_NOT_I109_SUB_I109
- 고혈압 환자로 판정된 적이 없는 환자 기록
- T120에서 MAIN_SICK이 (I109*)을 제외, SUB_SICK이 (I109*)를 제외한 레코드로 만든 DB 
CREATE TABLE T120_NOT_I109_SUB_I109
CREATE TABLE T120_NOT_I109_SUB_I109 AS
(
	SELECT *
	FROM namzle.T120 AS T1
	WHERE
    	(
        	T1.PERSON_ID NOT IN(
            	SELECT PERSON_ID
            	FROM T120_I109)
    	)
    	AND
    	(
        	T1.PERSON_ID NOT IN(
            	SELECT PERSON_ID
            	FROM T120_SUB_I109)
    	)
)
;
CREATE INDEX person ON T120_SUB_I109(PERSON_ID)

//
T120_NOT_I109_SUB_I109.88393572개의 record
T120_NOT_I109_SUB_I109.89848180개의 record


- MAX(RECU_FR_DT : 최신내원일자, 조제투여일자)
- SQL : SELECT COUNT(DISTINCT(PERSON_ID)) FROM namzle.T120_NOT_I109_SUB_I109;
4. T120_NOT_I109_SUB_I109_YEAR
- 1에서 고혈압 환자로 판정된 사람을 제외한 2013년(최신 진단 해)로 구성된 테이블:????병
- 필드 구성: PERSON_ID,MAX_YEAR,MAIN_SICKS
MAIN SICKS ->>>>>우측일수록 최신 진단 질병
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR AS
(
	SELECT T1.PERSON_ID, T1.MAX_YEAR, GROUP_CONCAT(DISTINCT(MAIN_SICK) SEPARATOR '/') AS MAIN_SICKS
	FROM
    	(
    	SELECT PERSON_ID, MAX(YEAR(RECU_FR_DT)) AS MAX_YEAR
    	FROM namzle.T120_NOT_I109_SUB_I109
    	GROUP BY PERSON_ID
    	) AS T1
	RIGHT JOIN T120_NOT_I109_SUB_I109 AS T2
    	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.MAX_YEAR = YEAR(T2.RECU_FR_DT)
	GROUP BY T1.PERSON_ID
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109_YEAR(PERSON_ID,MAX_YEAR)
4. T120_NOT_I109_SUB_I109_YEAR_2013
- 1에서 고혈압 환자로 판정된 사람을 제외한 2013년(최신 진단 해)로 구성된 테이블:????병
- 필드 구성: PERSON_ID,MAX_YEAR,MAIN_SICKS
MAIN SICKS ->>>>>우측일수록 최신 진단 질병
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013 AS
(
SELECT *
FROM T120_NOT_I109_SUB_I109_YEAR
WHERE MAX_YEAR=2013
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109_YEAR_2013(PERSON_ID,MAX_YEAR)



5. T120_NOT_I109_SUB_I109_YEAR_2013_JK
2에 포함된 사람들의
+자격 정보 테이블 
+사망자 제외

- 테이블 2에 포함된 MAX_YEAR와 PERSON_ID에 해당하는 자격정보로 구성된 테이블
- JK테이블의 STND_Y는 제일 최근 진단받은해(MAX_YEAR,2013)와 동일
- 필드 구성: PERSON_ID,MAX_YEAR,MAIN_SICKS,자격데이터
- FROM jk 가 일원화 되지 않은 테이블로부터 뽑아와 대조군 밑 통합군에 영향을 미침 , 1/28일 FROM JK_UNIF로 변경
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013_JK
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013_JK AS (
	SELECT
   	 T2.`PERSON_ID`,
   	 T2.`MAX_YEAR`,
   	 T2.`MAIN_SICKS`,
   	 T1.`SEX`,
   	 T1.`AGE_GROUP`,
   	 T1.`SIDO`,
   	 T1.`SGG`,
   	 T1.`IPSN_TYPE_CD`,
   	 T1.`CTRB_PT_TYPE_CD`,
   	 T1.`DFAB_GRD_CD`,
   	 T1.`DFAB_PTN_CD`
	FROM JK_UNIF AS T1
	LEFT JOIN T120_NOT_I109_SUB_I109_YEAR_2013 AS T2
	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.STND_Y = T2.MAX_YEAR AND DTH_YM =""
);
7. CTR_DATA_0YEAR(과거병력 추가+YEAR변수 통일)
- 필드 구성: PERSON_ID,MAX_YEAR,MAIN_SICKS,자격데이터,질병이력,1,2,3,4,5,6년전 검진 데이터

CREATE TABLE CTR_DATA_0YEAR
(SELECT
    T1.`PERSON_ID`,
	T1.`MAX_YEAR` AS `YEAR`,
	T1.`MAIN_SICKS`,
	T1.`SEX`,
	T1.`AGE_GROUP`,
	T1.`SIDO`,
	T1.`SGG`,
	T1.`IPSN_TYPE_CD`,
	T1.`CTRB_PT_TYPE_CD`,
	T1.`DFAB_GRD_CD`,
	T1.`DFAB_PTN_CD`,
	T2.`HCHK_APOP_PMH_YN`,
	T2.`HCHK_HDISE_PMH_YN`,
	T2.`HCHK_HPRTS_PMH_YN`,
	T2.`HCHK_DIABML_PMH_YN`,
	T2.`HCHK_HPLPDM_PMH_YN`,
	T2.`HCHK_PHSS_PMH_YN`,
	T2.`HCHK_ETCDSE_PMH_YN`,
	T2.`FMLY_APOP_PATIEN_YN`,
	T2.`FMLY_HDISE_PATIEN_YN`,
	T2.`FMLY_HPRTS_PATIEN_YN`,
	T2.`FMLY_DIABML_PATIEN_YN`,
	T2.`FMLY_CANCER_PATIEN_YN`
FROM T120_NOT_I109_SUB_I109_YEAR_2013_JK AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.MAX_YEAR = (T2.HCHK_YEAR + 0) AND T2.`BLDS`<126 AND
	(T2.`HCHK_APOP_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_APOP_PMH_YN`  	="") AND
	(T2.`HCHK_HDISE_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HDISE_PMH_YN` 	="") AND
	(T2.`HCHK_HPRTS_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HPRTS_PMH_YN` 	="") AND
	(T2.`HCHK_DIABML_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_DIABML_PMH_YN`	="") AND
	(T2.`HCHK_HPLPDM_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_HPLPDM_PMH_YN`	="") AND
	(T2.`HCHK_PHSS_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_PHSS_PMH_YN`  	="") AND
	(T2.`HCHK_ETCDSE_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_ETCDSE_PMH_YN`	="") AND
	(T2.`FMLY_APOP_PATIEN_YN`   IS NOT NULL AND NOT T2.`FMLY_APOP_PATIEN_YN`   ="") AND
	(T2.`FMLY_HDISE_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HDISE_PATIEN_YN`  ="") AND
	(T2.`FMLY_HPRTS_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HPRTS_PATIEN_YN`  ="") AND
	(T2.`FMLY_DIABML_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_DIABML_PATIEN_YN` ="") AND
	(T2.`FMLY_CANCER_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_CANCER_PATIEN_YN` ="")
)



#118998
CREATE TABLE CTR_DATA_1_1,2,3,4,5,6 YEAR
2013년(제일 최근)까지 검진 기록이 있고,
고혈압(I109*)진단을 받은적이 한번도 없고,
+DBLS(?) 공복혈당이 126이상인 환자 제외 (검진data말고 진단data에서 참고해서 제외해야함.)
혈색소, 감마지티피 구분화 함


CREATE TABLE T120_I109 AS
(
SELECT T1.*
FROM T120 AS T1
WHERE
	T1.MAIN_SICK LIKE "E10%" OR
	T1.MAIN_SICK LIKE "I109%" OR
	T1.MAIN_SICK LIKE "E12%" OR
	T1.MAIN_SICK LIKE "E13%" OR
	T1.MAIN_SICK LIKE "E14%"
)
;
CREATE INDEX person ON T120_I109(PERSON_ID)
;
CREATE TABLE T120_SUB_I109 AS
(
SELECT T1.*
FROM T120 AS T1
WHERE
	T1.SUB_SICK LIKE "E10%" OR
	T1.SUB_SICK LIKE "I109%" OR
	T1.SUB_SICK LIKE "E12%" OR
	T1.SUB_SICK LIKE "E13%" OR
	T1.SUB_SICK LIKE "E14%"
)
;
CREATE INDEX person ON T120_SUB_I109(PERSON_ID)
;
CREATE TABLE T120_NOT_I109_SUB_I109 AS
(
	SELECT *
	FROM namzle.T120 AS T1
	WHERE
    	(
        	T1.PERSON_ID NOT IN(
            	SELECT PERSON_ID
            	FROM T120_I109)
    	)
    	AND
    	(
        	T1.PERSON_ID NOT IN(
            	SELECT PERSON_ID
            	FROM T120_SUB_I109)
    	)
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109(PERSON_ID)
;
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR AS
(
	SELECT T1.PERSON_ID, T1.MAX_YEAR, GROUP_CONCAT(DISTINCT(MAIN_SICK) SEPARATOR '/') AS MAIN_SICKS
	FROM
    	(
    	SELECT PERSON_ID, MAX(YEAR(RECU_FR_DT)) AS MAX_YEAR
    	FROM namzle.T120_NOT_I109_SUB_I109
    	GROUP BY PERSON_ID
    	) AS T1
	RIGHT JOIN T120_NOT_I109_SUB_I109 AS T2
    	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.MAX_YEAR = YEAR(T2.RECU_FR_DT)
	GROUP BY T1.PERSON_ID
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109_YEAR(PERSON_ID,MAX_YEAR)
;

CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013 AS
(
SELECT *
FROM T120_NOT_I109_SUB_I109_YEAR
WHERE MAX_YEAR=2013
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109_YEAR_2013(PERSON_ID,MAX_YEAR)
;
CREATE TABLE T120_NOT_I109_SUB_I109_YEAR_2013_JK AS (
	SELECT
    	T2.`PERSON_ID`,
    	T2.`MAX_YEAR`,
    	T2.`MAIN_SICKS`,
    	T1.`SEX`,
    	T1.`AGE_GROUP`,
    	T1.`SIDO`,
    	T1.`IPSN_TYPE_CD`,
    	T1.`CTRB_PT_TYPE_CD`,
    	T1.`DFAB_GRD_CD`,
    	T1.`DFAB_PTN_CD`
	FROM JK_UNIF AS T1
	LEFT JOIN T120_NOT_I109_SUB_I109_YEAR_2013 AS T2
	ON T1.PERSON_ID = T2.PERSON_ID
	WHERE T1.STND_Y = T2.MAX_YEAR AND DTH_YM =""
)
;
CREATE INDEX person ON T120_NOT_I109_SUB_I109_YEAR_2013_JK(PERSON_ID,MAX_YEAR)
;
CREATE TABLE CTR_DATA_0YEAR
(SELECT
	T1.`PERSON_ID`,
	T1.`MAX_YEAR` AS `YEAR`,
	T1.`MAIN_SICKS`,
	T1.`SEX`,
	T1.`AGE_GROUP`,
	T1.`SIDO`,
	T1.`IPSN_TYPE_CD`,
	T1.`CTRB_PT_TYPE_CD`,
	T1.`DFAB_GRD_CD`,
	T1.`DFAB_PTN_CD`,
	T2.`HCHK_APOP_PMH_YN`,
	T2.`HCHK_HDISE_PMH_YN`,
	T2.`HCHK_HPRTS_PMH_YN`,
	T2.`HCHK_DIABML_PMH_YN`,
	T2.`HCHK_HPLPDM_PMH_YN`,
	T2.`HCHK_PHSS_PMH_YN`,
	T2.`HCHK_ETCDSE_PMH_YN`,
	T2.`FMLY_APOP_PATIEN_YN`,
	T2.`FMLY_HDISE_PATIEN_YN`,
	T2.`FMLY_HPRTS_PATIEN_YN`,
	T2.`FMLY_DIABML_PATIEN_YN`,
	T2.`FMLY_CANCER_PATIEN_YN`
FROM T120_NOT_I109_SUB_I109_YEAR_2013_JK AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.MAX_YEAR = (T2.HCHK_YEAR + 0) AND T2.`BLDS`<3 AND
	(T2.`HCHK_APOP_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_APOP_PMH_YN`  	="") AND
	(T2.`HCHK_HDISE_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HDISE_PMH_YN` 	="") AND
	(T2.`HCHK_HPRTS_PMH_YN` 	IS NOT NULL AND NOT T2.`HCHK_HPRTS_PMH_YN` 	="") AND
	(T2.`HCHK_DIABML_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_DIABML_PMH_YN`	="") AND
	(T2.`HCHK_HPLPDM_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_HPLPDM_PMH_YN`	="") AND
	(T2.`HCHK_PHSS_PMH_YN`  	IS NOT NULL AND NOT T2.`HCHK_PHSS_PMH_YN`  	="") AND
	(T2.`HCHK_ETCDSE_PMH_YN`	IS NOT NULL AND NOT T2.`HCHK_ETCDSE_PMH_YN`	="") AND
	(T2.`FMLY_APOP_PATIEN_YN`   IS NOT NULL AND NOT T2.`FMLY_APOP_PATIEN_YN`   ="") AND
	(T2.`FMLY_HDISE_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HDISE_PATIEN_YN`  ="") AND
	(T2.`FMLY_HPRTS_PATIEN_YN`  IS NOT NULL AND NOT T2.`FMLY_HPRTS_PATIEN_YN`  ="") AND
	(T2.`FMLY_DIABML_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_DIABML_PATIEN_YN` ="") AND
	(T2.`FMLY_CANCER_PATIEN_YN` IS NOT NULL AND NOT T2.`FMLY_CANCER_PATIEN_YN` ="")
)
;
CREATE TABLE CTR_DATA_1_1YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `1Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `1Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `1Y_BMI`,
	T2.`BP` AS `1Y_BP`,
	T2.`BLDS` AS `1Y_BLDS`,
	T2.`TOT_CHOLE` AS `1Y_TOT_CHOLE`,
	T2.`HMG` AS `1Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `1Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `1Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `1Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `1Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `1Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `1Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `1Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `1Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `1Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `1Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_0YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 1) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_1_2YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `2Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `2Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `2Y_BMI`,
	T2.`BP` AS `2Y_BP`,
	T2.`BLDS` AS `2Y_BLDS`,
	T2.`TOT_CHOLE` AS `2Y_TOT_CHOLE`,
	T2.`HMG` AS `2Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `2Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `2Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `2Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `2Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `2Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `2Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `2Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `2Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `2Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `2Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_1_1YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 2) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_1_3YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `3Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `3Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `3Y_BMI`,
	T2.`BP` AS `3Y_BP`,
	T2.`BLDS` AS `3Y_BLDS`,
	T2.`TOT_CHOLE` AS `3Y_TOT_CHOLE`,
	T2.`HMG` AS `3Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `3Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `3Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `3Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `3Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `3Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `3Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `3Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `3Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `3Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `3Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_1_2YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 3) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_1_4YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `4Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `4Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `4Y_BMI`,
	T2.`BP` AS `4Y_BP`,
	T2.`BLDS` AS `4Y_BLDS`,
	T2.`TOT_CHOLE` AS `4Y_TOT_CHOLE`,
	T2.`HMG` AS `4Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `4Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `4Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `4Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `4Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `4Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `4Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `4Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `4Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `4Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `4Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_1_3YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 4) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_1_5YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `5Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `5Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `5Y_BMI`,
	T2.`BP` AS `5Y_BP`,
	T2.`BLDS` AS `5Y_BLDS`,
	T2.`TOT_CHOLE` AS `5Y_TOT_CHOLE`,
	T2.`HMG` AS `5Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `5Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `5Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `5Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `5Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `5Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `5Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `5Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `5Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `5Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `5Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_1_4YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 5) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_1_6YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `6Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `6Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `6Y_BMI`,
	T2.`BP` AS `6Y_BP`,
	T2.`BLDS` AS `6Y_BLDS`,
	T2.`TOT_CHOLE` AS `6Y_TOT_CHOLE`,
	T2.`HMG` AS `6Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `6Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `6Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `6Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `6Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `6Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `6Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `6Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `6Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `6Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `6Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_1_5YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 6) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_2_2YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `2Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `2Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `2Y_BMI`,
	T2.`BP` AS `2Y_BP`,
	T2.`BLDS` AS `2Y_BLDS`,
	T2.`TOT_CHOLE` AS `2Y_TOT_CHOLE`,
	T2.`HMG` AS `2Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `2Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `2Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `2Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `2Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `2Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `2Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `2Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `2Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `2Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `2Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_0YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 2) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_2_4YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `4Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `4Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `4Y_BMI`,
	T2.`BP` AS `4Y_BP`,
	T2.`BLDS` AS `4Y_BLDS`,
	T2.`TOT_CHOLE` AS `4Y_TOT_CHOLE`,
	T2.`HMG` AS `4Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `4Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `4Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `4Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `4Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `4Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `4Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `4Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `4Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `4Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `4Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_2_2YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 4) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
CREATE TABLE CTR_DATA_2_6YEAR
(SELECT
	T1.*,
	T2.`HCHK_YEAR` AS `6Y_HCHK_YEAR`,
	T2.`YKIHO_GUBUN_CD` AS `6Y_YKIHO_GUBUN_CD`,
	T2.`BMI` AS `6Y_BMI`,
	T2.`BP` AS `6Y_BP`,
	T2.`BLDS` AS `6Y_BLDS`,
	T2.`TOT_CHOLE` AS `6Y_TOT_CHOLE`,
	T2.`HMG` AS `6Y_HMG`,
	T2.`OLIG_PROTE_CD` AS `6Y_OLIG_PROTE_CD`,
	T2.`SGOT_AST` AS `6Y_SGOT_AST`,
	T2.`SGPT_ALT` AS `6Y_SGPT_ALT`,
	T2.`GAMMA_GTP` AS `6Y_GAMMA_GTP`,
	T2.`SMK_STAT_TYPE_RSPS_CD` AS `6Y_SMK_STAT_TYPE_RSPS_CD`,
	T2.`SMK_TERM_RSPS_CD` AS `6Y_SMK_TERM_RSPS_CD`,
	T2.`DSQTY_RSPS_CD` AS `6Y_DSQTY_RSPS_CD`,
	T2.`DRNK_HABIT_RSPS_CD` AS `6Y_DRNK_HABIT_RSPS_CD`,
	T2.`TM1_DRKQTY_RSPS_CD` AS `6Y_TM1_DRKQTY_RSPS_CD`,
	T2.`EXERCI_FREQ_RSPS_CD` AS `6Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_2_4YEAR AS T1
INNER JOIN GJ_UNIF AS T2
ON T1.PERSON_ID = T2.PERSON_ID
WHERE T1.`YEAR` = (T2.HCHK_YEAR + 6) AND T2.`BLDS`<3     AND
	(T2.`HCHK_YEAR`         	IS NOT NULL AND NOT T2.`HCHK_YEAR`             	="") AND
	(T2.`YKIHO_GUBUN_CD`     	IS NOT NULL AND NOT T2.`YKIHO_GUBUN_CD`     	="") AND
	(T2.`BMI`             	IS NOT NULL) AND
	(T2.`BP`             	IS NOT NULL) AND
	(T2.`BLDS`                 	IS NOT NULL AND NOT T2.`BLDS`                 	="") AND
	(T2.`TOT_CHOLE`         	IS NOT NULL AND NOT T2.`TOT_CHOLE`             	="") AND
	(T2.`HMG`                 	IS NOT NULL AND NOT T2.`HMG`                 	="") AND
	(T2.`OLIG_PROTE_CD`     	IS NOT NULL AND NOT T2.`OLIG_PROTE_CD`         	="") AND
	(T2.`SGOT_AST`             	IS NOT NULL AND NOT T2.`SGOT_AST`             	="") AND
	(T2.`SGPT_ALT`             	IS NOT NULL AND NOT T2.`SGPT_ALT`             	="") AND
	(T2.`GAMMA_GTP`         	IS NOT NULL AND NOT T2.`GAMMA_GTP`             	="") AND
	(T2.`SMK_STAT_TYPE_RSPS_CD`	IS NOT NULL AND NOT T2.`SMK_STAT_TYPE_RSPS_CD`	="") AND
	(T2.`SMK_TERM_RSPS_CD`     	IS NOT NULL AND NOT T2.`SMK_TERM_RSPS_CD`     	="") AND
	(T2.`DSQTY_RSPS_CD`     	IS NOT NULL AND NOT T2.`DSQTY_RSPS_CD`         	="") AND
	(T2.`DRNK_HABIT_RSPS_CD` 	IS NOT NULL AND NOT T2.`DRNK_HABIT_RSPS_CD` 	="") AND
	(T2.`TM1_DRKQTY_RSPS_CD` 	IS NOT NULL AND NOT T2.`TM1_DRKQTY_RSPS_CD` 	="") AND
	(T2.`EXERCI_FREQ_RSPS_CD` 	IS NOT NULL AND NOT T2.`EXERCI_FREQ_RSPS_CD` 	="")
)
;
UPDATE CTR_DATA_2_6YEAR
SET
2Y_HMG=CLASS_HMG(SEX,2Y_HMG),
4Y_HMG=CLASS_HMG(SEX,4Y_HMG),
6Y_HMG=CLASS_HMG(SEX,6Y_HMG)
WHERE
(2Y_HMG IS NOT NULL AND NOT 2Y_HMG="") AND
(4Y_HMG IS NOT NULL AND NOT 4Y_HMG="") AND
(6Y_HMG IS NOT NULL AND NOT 6Y_HMG="")
;
UPDATE CTR_DATA_2_6YEAR
SET
2Y_GAMMA_GTP=CLASS_GTP(SEX,2Y_GAMMA_GTP),
4Y_GAMMA_GTP=CLASS_GTP(SEX,4Y_GAMMA_GTP),
6Y_GAMMA_GTP=CLASS_GTP(SEX,6Y_GAMMA_GTP)
WHERE
(2Y_GAMMA_GTP IS NOT NULL AND NOT 2Y_GAMMA_GTP="") AND
(4Y_GAMMA_GTP IS NOT NULL AND NOT 4Y_GAMMA_GTP="") AND
(6Y_GAMMA_GTP IS NOT NULL AND NOT 6Y_GAMMA_GTP="")


◉실험군+대조군

INTEGRETED_2,4,6 YEAR
CREATE TABLE INTEGRATED_2_2YEAR AS

SELECT *
FROM EXP_DATA_2_2YEAR

UNION

SELECT *
FROM CTR_DATA_2_2YEAR
;
CREATE TABLE INTEGRATED_2_4YEAR AS

SELECT *
FROM EXP_DATA_2_4YEAR

UNION

SELECT *
FROM CTR_DATA_2_4YEAR
;
CREATE TABLE INTEGRATED_2_6YEAR AS

SELECT *
FROM EXP_DATA_2_6YEAR

UNION

SELECT *
FROM CTR_DATA_2_6YEAR
;
CREATE TABLE INTEGRATED_2_2YEAR_SICK01 AS

SELECT `EXP_DATA_2_2YEAR`.`PERSON_ID`,
	`EXP_DATA_2_2YEAR`.`YEAR`,
	1 AS `MAIN_SICKS`,
	`EXP_DATA_2_2YEAR`.`SEX`,
	`EXP_DATA_2_2YEAR`.`AGE_GROUP`,
	`EXP_DATA_2_2YEAR`.`SIDO`,
	`EXP_DATA_2_2YEAR`.`IPSN_TYPE_CD`,
	`EXP_DATA_2_2YEAR`.`CTRB_PT_TYPE_CD`,
	`EXP_DATA_2_2YEAR`.`DFAB_GRD_CD`,
	`EXP_DATA_2_2YEAR`.`DFAB_PTN_CD`,
	`EXP_DATA_2_2YEAR`.`HCHK_APOP_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_HDISE_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_HPRTS_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_DIABML_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_PHSS_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`EXP_DATA_2_2YEAR`.`FMLY_APOP_PATIEN_YN`,
	`EXP_DATA_2_2YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`EXP_DATA_2_2YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`EXP_DATA_2_2YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`EXP_DATA_2_2YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`EXP_DATA_2_2YEAR`.`2Y_HCHK_YEAR`,
	`EXP_DATA_2_2YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_BMI`,
	`EXP_DATA_2_2YEAR`.`2Y_BP`,
	`EXP_DATA_2_2YEAR`.`2Y_BLDS`,
	`EXP_DATA_2_2YEAR`.`2Y_TOT_CHOLE`,
	`EXP_DATA_2_2YEAR`.`2Y_HMG`,
	`EXP_DATA_2_2YEAR`.`2Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_SGOT_AST`,
	`EXP_DATA_2_2YEAR`.`2Y_SGPT_ALT`,
	`EXP_DATA_2_2YEAR`.`2Y_GAMMA_GTP`,
	`EXP_DATA_2_2YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_2YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`
    
FROM EXP_DATA_2_2YEAR

UNION

SELECT `CTR_DATA_2_2YEAR`.`PERSON_ID`,
	`CTR_DATA_2_2YEAR`.`YEAR`,
	0 AS `MAIN_SICKS`,
	`CTR_DATA_2_2YEAR`.`SEX`,
	`CTR_DATA_2_2YEAR`.`AGE_GROUP`,
	`CTR_DATA_2_2YEAR`.`SIDO`,
	`CTR_DATA_2_2YEAR`.`IPSN_TYPE_CD`,
	`CTR_DATA_2_2YEAR`.`CTRB_PT_TYPE_CD`,
	`CTR_DATA_2_2YEAR`.`DFAB_GRD_CD`,
	`CTR_DATA_2_2YEAR`.`DFAB_PTN_CD`,
	`CTR_DATA_2_2YEAR`.`HCHK_APOP_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_HDISE_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_HPRTS_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_DIABML_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_PHSS_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`CTR_DATA_2_2YEAR`.`FMLY_APOP_PATIEN_YN`,
	`CTR_DATA_2_2YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`CTR_DATA_2_2YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`CTR_DATA_2_2YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`CTR_DATA_2_2YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`CTR_DATA_2_2YEAR`.`2Y_HCHK_YEAR`,
	`CTR_DATA_2_2YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_BMI`,
	`CTR_DATA_2_2YEAR`.`2Y_BP`,
	`CTR_DATA_2_2YEAR`.`2Y_BLDS`,
	`CTR_DATA_2_2YEAR`.`2Y_TOT_CHOLE`,
	`CTR_DATA_2_2YEAR`.`2Y_HMG`,
	`CTR_DATA_2_2YEAR`.`2Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_SGOT_AST`,
	`CTR_DATA_2_2YEAR`.`2Y_SGPT_ALT`,
	`CTR_DATA_2_2YEAR`.`2Y_GAMMA_GTP`,
	`CTR_DATA_2_2YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_2YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_2_2YEAR

;
CREATE TABLE INTEGRATED_2_4YEAR_SICK01 AS

SELECT `EXP_DATA_2_4YEAR`.`PERSON_ID`,
	`EXP_DATA_2_4YEAR`.`YEAR`,
	1 AS `MAIN_SICKS`,
	`EXP_DATA_2_4YEAR`.`SEX`,
	`EXP_DATA_2_4YEAR`.`AGE_GROUP`,
	`EXP_DATA_2_4YEAR`.`SIDO`,
	`EXP_DATA_2_4YEAR`.`IPSN_TYPE_CD`,
	`EXP_DATA_2_4YEAR`.`CTRB_PT_TYPE_CD`,
	`EXP_DATA_2_4YEAR`.`DFAB_GRD_CD`,
	`EXP_DATA_2_4YEAR`.`DFAB_PTN_CD`,
	`EXP_DATA_2_4YEAR`.`HCHK_APOP_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_HDISE_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_HPRTS_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_DIABML_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_PHSS_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`EXP_DATA_2_4YEAR`.`FMLY_APOP_PATIEN_YN`,
	`EXP_DATA_2_4YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`EXP_DATA_2_4YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`EXP_DATA_2_4YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`EXP_DATA_2_4YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`EXP_DATA_2_4YEAR`.`2Y_HCHK_YEAR`,
	`EXP_DATA_2_4YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_BMI`,
	`EXP_DATA_2_4YEAR`.`2Y_BP`,
	`EXP_DATA_2_4YEAR`.`2Y_BLDS`,
	`EXP_DATA_2_4YEAR`.`2Y_TOT_CHOLE`,
	`EXP_DATA_2_4YEAR`.`2Y_HMG`,
	`EXP_DATA_2_4YEAR`.`2Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_SGOT_AST`,
	`EXP_DATA_2_4YEAR`.`2Y_SGPT_ALT`,
	`EXP_DATA_2_4YEAR`.`2Y_GAMMA_GTP`,
	`EXP_DATA_2_4YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_HCHK_YEAR`,
	`EXP_DATA_2_4YEAR`.`4Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_BMI`,
	`EXP_DATA_2_4YEAR`.`4Y_BP`,
	`EXP_DATA_2_4YEAR`.`4Y_BLDS`,
	`EXP_DATA_2_4YEAR`.`4Y_TOT_CHOLE`,
	`EXP_DATA_2_4YEAR`.`4Y_HMG`,
	`EXP_DATA_2_4YEAR`.`4Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_SGOT_AST`,
	`EXP_DATA_2_4YEAR`.`4Y_SGPT_ALT`,
	`EXP_DATA_2_4YEAR`.`4Y_GAMMA_GTP`,
	`EXP_DATA_2_4YEAR`.`4Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_4YEAR`.`4Y_EXERCI_FREQ_RSPS_CD`
FROM EXP_DATA_2_4YEAR

UNION

SELECT `CTR_DATA_2_4YEAR`.`PERSON_ID`,
	`CTR_DATA_2_4YEAR`.`YEAR`,
	0 AS `MAIN_SICKS`,
	`CTR_DATA_2_4YEAR`.`SEX`,
	`CTR_DATA_2_4YEAR`.`AGE_GROUP`,
	`CTR_DATA_2_4YEAR`.`SIDO`,
	`CTR_DATA_2_4YEAR`.`IPSN_TYPE_CD`,
	`CTR_DATA_2_4YEAR`.`CTRB_PT_TYPE_CD`,
	`CTR_DATA_2_4YEAR`.`DFAB_GRD_CD`,
	`CTR_DATA_2_4YEAR`.`DFAB_PTN_CD`,
	`CTR_DATA_2_4YEAR`.`HCHK_APOP_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_HDISE_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_HPRTS_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_DIABML_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_PHSS_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`CTR_DATA_2_4YEAR`.`FMLY_APOP_PATIEN_YN`,
	`CTR_DATA_2_4YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`CTR_DATA_2_4YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`CTR_DATA_2_4YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`CTR_DATA_2_4YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`CTR_DATA_2_4YEAR`.`2Y_HCHK_YEAR`,
	`CTR_DATA_2_4YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_BMI`,
	`CTR_DATA_2_4YEAR`.`2Y_BP`,
	`CTR_DATA_2_4YEAR`.`2Y_BLDS`,
	`CTR_DATA_2_4YEAR`.`2Y_TOT_CHOLE`,
	`CTR_DATA_2_4YEAR`.`2Y_HMG`,
	`CTR_DATA_2_4YEAR`.`2Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_SGOT_AST`,
	`CTR_DATA_2_4YEAR`.`2Y_SGPT_ALT`,
	`CTR_DATA_2_4YEAR`.`2Y_GAMMA_GTP`,
	`CTR_DATA_2_4YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_HCHK_YEAR`,
	`CTR_DATA_2_4YEAR`.`4Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_BMI`,
	`CTR_DATA_2_4YEAR`.`4Y_BP`,
	`CTR_DATA_2_4YEAR`.`4Y_BLDS`,
	`CTR_DATA_2_4YEAR`.`4Y_TOT_CHOLE`,
	`CTR_DATA_2_4YEAR`.`4Y_HMG`,
	`CTR_DATA_2_4YEAR`.`4Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_SGOT_AST`,
	`CTR_DATA_2_4YEAR`.`4Y_SGPT_ALT`,
	`CTR_DATA_2_4YEAR`.`4Y_GAMMA_GTP`,
	`CTR_DATA_2_4YEAR`.`4Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_4YEAR`.`4Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_2_4YEAR
;
CREATE TABLE INTEGRATED_2_6YEAR_SICK01 AS

SELECT `EXP_DATA_2_6YEAR`.`PERSON_ID`,
	`EXP_DATA_2_6YEAR`.`YEAR`,
	1 AS `MAIN_SICKS`,
	`EXP_DATA_2_6YEAR`.`SEX`,
	`EXP_DATA_2_6YEAR`.`AGE_GROUP`,
	`EXP_DATA_2_6YEAR`.`SIDO`,
	`EXP_DATA_2_6YEAR`.`IPSN_TYPE_CD`,
	`EXP_DATA_2_6YEAR`.`CTRB_PT_TYPE_CD`,
	`EXP_DATA_2_6YEAR`.`DFAB_GRD_CD`,
	`EXP_DATA_2_6YEAR`.`DFAB_PTN_CD`,
	`EXP_DATA_2_6YEAR`.`HCHK_APOP_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_HDISE_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_HPRTS_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_DIABML_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_PHSS_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`EXP_DATA_2_6YEAR`.`FMLY_APOP_PATIEN_YN`,
	`EXP_DATA_2_6YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`EXP_DATA_2_6YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`EXP_DATA_2_6YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`EXP_DATA_2_6YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`EXP_DATA_2_6YEAR`.`2Y_HCHK_YEAR`,
	`EXP_DATA_2_6YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_BMI`,
	`EXP_DATA_2_6YEAR`.`2Y_BP`,
	`EXP_DATA_2_6YEAR`.`2Y_BLDS`,
	`EXP_DATA_2_6YEAR`.`2Y_TOT_CHOLE`,
	`EXP_DATA_2_6YEAR`.`2Y_HMG`,
	`EXP_DATA_2_6YEAR`.`2Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_SGOT_AST`,
	`EXP_DATA_2_6YEAR`.`2Y_SGPT_ALT`,
	`EXP_DATA_2_6YEAR`.`2Y_GAMMA_GTP`,
	`EXP_DATA_2_6YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_HCHK_YEAR`,
	`EXP_DATA_2_6YEAR`.`4Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_BMI`,
	`EXP_DATA_2_6YEAR`.`4Y_BP`,
	`EXP_DATA_2_6YEAR`.`4Y_BLDS`,
	`EXP_DATA_2_6YEAR`.`4Y_TOT_CHOLE`,
	`EXP_DATA_2_6YEAR`.`4Y_HMG`,
	`EXP_DATA_2_6YEAR`.`4Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_SGOT_AST`,
	`EXP_DATA_2_6YEAR`.`4Y_SGPT_ALT`,
	`EXP_DATA_2_6YEAR`.`4Y_GAMMA_GTP`,
	`EXP_DATA_2_6YEAR`.`4Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`4Y_EXERCI_FREQ_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_HCHK_YEAR`,
	`EXP_DATA_2_6YEAR`.`6Y_YKIHO_GUBUN_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_BMI`,
	`EXP_DATA_2_6YEAR`.`6Y_BP`,
	`EXP_DATA_2_6YEAR`.`6Y_BLDS`,
	`EXP_DATA_2_6YEAR`.`6Y_TOT_CHOLE`,
	`EXP_DATA_2_6YEAR`.`6Y_HMG`,
	`EXP_DATA_2_6YEAR`.`6Y_OLIG_PROTE_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_SGOT_AST`,
	`EXP_DATA_2_6YEAR`.`6Y_SGPT_ALT`,
	`EXP_DATA_2_6YEAR`.`6Y_GAMMA_GTP`,
	`EXP_DATA_2_6YEAR`.`6Y_SMK_STAT_TYPE_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_SMK_TERM_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_DSQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_DRNK_HABIT_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_TM1_DRKQTY_RSPS_CD`,
	`EXP_DATA_2_6YEAR`.`6Y_EXERCI_FREQ_RSPS_CD`
FROM EXP_DATA_2_6YEAR

UNION

SELECT `CTR_DATA_2_6YEAR`.`PERSON_ID`,
	`CTR_DATA_2_6YEAR`.`YEAR`,
	0 AS `MAIN_SICKS`,
	`CTR_DATA_2_6YEAR`.`SEX`,
	`CTR_DATA_2_6YEAR`.`AGE_GROUP`,
	`CTR_DATA_2_6YEAR`.`SIDO`,
	`CTR_DATA_2_6YEAR`.`IPSN_TYPE_CD`,
	`CTR_DATA_2_6YEAR`.`CTRB_PT_TYPE_CD`,
	`CTR_DATA_2_6YEAR`.`DFAB_GRD_CD`,
	`CTR_DATA_2_6YEAR`.`DFAB_PTN_CD`,
	`CTR_DATA_2_6YEAR`.`HCHK_APOP_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_HDISE_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_HPRTS_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_DIABML_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_HPLPDM_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_PHSS_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`HCHK_ETCDSE_PMH_YN`,
	`CTR_DATA_2_6YEAR`.`FMLY_APOP_PATIEN_YN`,
	`CTR_DATA_2_6YEAR`.`FMLY_HDISE_PATIEN_YN`,
	`CTR_DATA_2_6YEAR`.`FMLY_HPRTS_PATIEN_YN`,
	`CTR_DATA_2_6YEAR`.`FMLY_DIABML_PATIEN_YN`,
	`CTR_DATA_2_6YEAR`.`FMLY_CANCER_PATIEN_YN`,
	`CTR_DATA_2_6YEAR`.`2Y_HCHK_YEAR`,
	`CTR_DATA_2_6YEAR`.`2Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_BMI`,
	`CTR_DATA_2_6YEAR`.`2Y_BP`,
	`CTR_DATA_2_6YEAR`.`2Y_BLDS`,
	`CTR_DATA_2_6YEAR`.`2Y_TOT_CHOLE`,
	`CTR_DATA_2_6YEAR`.`2Y_HMG`,
	`CTR_DATA_2_6YEAR`.`2Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_SGOT_AST`,
	`CTR_DATA_2_6YEAR`.`2Y_SGPT_ALT`,
	`CTR_DATA_2_6YEAR`.`2Y_GAMMA_GTP`,
	`CTR_DATA_2_6YEAR`.`2Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`2Y_EXERCI_FREQ_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_HCHK_YEAR`,
	`CTR_DATA_2_6YEAR`.`4Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_BMI`,
	`CTR_DATA_2_6YEAR`.`4Y_BP`,
	`CTR_DATA_2_6YEAR`.`4Y_BLDS`,
	`CTR_DATA_2_6YEAR`.`4Y_TOT_CHOLE`,
	`CTR_DATA_2_6YEAR`.`4Y_HMG`,
	`CTR_DATA_2_6YEAR`.`4Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_SGOT_AST`,
	`CTR_DATA_2_6YEAR`.`4Y_SGPT_ALT`,
	`CTR_DATA_2_6YEAR`.`4Y_GAMMA_GTP`,
	`CTR_DATA_2_6YEAR`.`4Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`4Y_EXERCI_FREQ_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_HCHK_YEAR`,
	`CTR_DATA_2_6YEAR`.`6Y_YKIHO_GUBUN_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_BMI`,
	`CTR_DATA_2_6YEAR`.`6Y_BP`,
	`CTR_DATA_2_6YEAR`.`6Y_BLDS`,
	`CTR_DATA_2_6YEAR`.`6Y_TOT_CHOLE`,
	`CTR_DATA_2_6YEAR`.`6Y_HMG`,
	`CTR_DATA_2_6YEAR`.`6Y_OLIG_PROTE_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_SGOT_AST`,
	`CTR_DATA_2_6YEAR`.`6Y_SGPT_ALT`,
	`CTR_DATA_2_6YEAR`.`6Y_GAMMA_GTP`,
	`CTR_DATA_2_6YEAR`.`6Y_SMK_STAT_TYPE_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_SMK_TERM_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_DSQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_DRNK_HABIT_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_TM1_DRKQTY_RSPS_CD`,
	`CTR_DATA_2_6YEAR`.`6Y_EXERCI_FREQ_RSPS_CD`
FROM CTR_DATA_2_6YEAR



